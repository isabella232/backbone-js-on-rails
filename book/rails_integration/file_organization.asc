=== Organizing your Backbone.js code in a Rails app

When using Backbone.js in a Rails app, you'll have two primary kinds of Backbone.js-related assets: classes, and templates.

=== Rails 3.0 and prior

With Rails 3.0 and prior, store your Backbone.js classes in +public/javascripts+:

--------------------------------------
public/
  javascripts/
    jquery.js
    jquery-ui.js
    models/
      user.js
      todo.js
    routers/
      users_router.js
      todos_router.js
    views/
      users/
        users_index.js
        users_new.js
        users_edit.js
      todos/
        todos_index.js
--------------------------------------

If you are using templates, store them in +app/templates+:

--------------------------------------
app/
  views/
    pages/
      home.html.erb
      terms.html.erb
      privacy.html.erb
      about.html.erb
  templates/
    users/
      index.jst
      new.jst
      edit.jst
    todos/
      index.jst
--------------------------------------

==== A note on JSTs and Jammit

As applications are moving to Rails 3.1, they're also moving to Sprockets for the asset packager.  Until then, many apps are using Jammit for asset packaging.  One issue with Jammit we've encountered and worked around is that the JST template path can change when adding new templates.  We have an open issue and workaround: 

https://github.com/documentcloud/jammit/issues/192

=== Rails 3.1
