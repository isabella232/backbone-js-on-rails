=== Cleaning up: understanding binding and unbinding (in progress)

Imagine you're writing a task management application.  Consider two views: an index view which contains all the tasks, and a detail view that shows detail on one task.  The interface switches between the two views, and both views can modify existing tasks (say, to indicate that the task is complete or incomplete).

image::views_and_templates/tasks-index.png[title="Tasks index view"]

image::views_and_templates/tasks-detail.png[title="Tasks detail view"]

The view classes look something like this:

[js]
source~~~~
include::tasks_index_and_detail_view_classes.js[]
source~~~~

TODO: Bind to change event on collection in index and detail.  Link to detail from index page.  If you don't unbind index when leaving it, and go to the detail view, and change the model (e.g. check "Completed"), then the index view class re-renders itself.  This is undesirable, and can cause visible bugs.  Briefly introduce convention of SwappingController.  Then, next section is SwappingController.
