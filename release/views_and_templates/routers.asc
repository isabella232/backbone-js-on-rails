=== Routers

Routers are an important part of the Backbone.js infrastructure. Backbone.js
routers provide methods for routing application flow based on client-side URL
fragments (#fragment).

include::a_note_about_push_state.asc[]

A typical Backbone.js router will appear as shown below.

[javascript]
source~~~~
ExampleApp.Routers.ExampleRouter = Backbone.Router.extend({
  routes: {
    ""         : "index"
    "show/:id" : "show"
  },

  index: function() {
    // Render the index view
  }

  show: function(id) {
    // Render the show view
  }
});
source~~~~

==== The Routes Hash

The basic router consists of a routes hash which is a mapping between URL
fragments and methods on the router. If the current URL fragment, or one that
is being visited matches one of the routes in the hash, its method will be
called.

Like Rails routes, Backbone.js routes can contain parameter parts, as seen in
the +show+ route in the example above. In this route, the part of the fragment
after +show/+ will then be based as an argument to the +show+ method.

Multiple parameters are possible, as well. For example, a route of
+search/:query/p:page+ will match a fragment of +search/completed/p2+ passing
passing +completed+ and +2+ to the action.

In the routes, +/+ is the natural separator. For example, a route of
+show/:id+ will not match a fragment of +show/1/2+. To match through route,
Backbone.js provides the concept of splat parts, identified by +*+ instead of
+:+. For example, a route of +show/*id+ would match the previous fragment, and
+1/2+ would be passed to the action as the +id+ variable.

Routing occurs when the browser's URL changes. This can occur when clicking on
a link, entering a URL into the browser's URL bar, or clicking the back
button. In all of those cases, Backbone.js will look to see if the new URL
matches an existing route. If it does, the specified function will be called
with any parameters.

In addition, an event with the name of "route" and the function will be
triggered. For example, when the +show+ route above is routed, an event of
+route:show+ will be fired. This is so that other objects can listen to the
router, and be notified about certain routes.

==== Initializing a Router

It is possible to specify an +initialize+ function in a Router which will be
called when the Router is instantiated. Any arguments passed to the Routes
constructor will be passed to this +initialize+ function.

Additionally, it is possible to pass the routes for a router via the
constructor like +new ExampleRouter({ routes: { "" : "index" }}+. But note
that this will override any routes defined in the routes hash on the router
itself.
