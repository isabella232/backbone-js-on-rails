<?xml version="1.0"?>
<fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format" font-family="serif,Symbol,ZapfDingbats" font-size="12pt" text-align="left" line-height="normal" font-selection-strategy="character-by-character" line-height-shift-adjustment="disregard-shifts" writing-mode="lr-tb" language="en"><fo:layout-master-set><fo:simple-page-master master-name="blank" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.25in" margin-left="0.5in" margin-right="0.75in"><fo:region-body display-align="center" margin-bottom="0.5in" margin-top="0.5in"/><fo:region-before region-name="xsl-region-before-blank" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-blank" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-first" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.25in" margin-left="0.75in" margin-right="0.5in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-odd" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.25in" margin-left="0.75in" margin-right="0.5in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-even" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.25in" margin-left="0.5in" margin-right="0.75in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="lot-first" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.25in" margin-left="0.75in" margin-right="0.5in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="lot-odd" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.25in" margin-left="0.75in" margin-right="0.5in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="lot-even" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.25in" margin-left="0.5in" margin-right="0.75in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="front-first" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.25in" margin-left="0.75in" margin-right="0.5in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="front-odd" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.25in" margin-left="0.75in" margin-right="0.5in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="front-even" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.25in" margin-left="0.5in" margin-right="0.75in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="body-first" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.25in" margin-left="0.75in" margin-right="0.5in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="body-odd" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.25in" margin-left="0.75in" margin-right="0.5in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="body-even" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.25in" margin-left="0.5in" margin-right="0.75in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="back-first" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.25in" margin-left="0.75in" margin-right="0.5in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="back-odd" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.25in" margin-left="0.75in" margin-right="0.5in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="back-even" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.25in" margin-left="0.5in" margin-right="0.75in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="index-first" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.25in" margin-left="0.75in" margin-right="0.5in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="2"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="index-odd" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.25in" margin-left="0.75in" margin-right="0.5in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="2"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="index-even" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.25in" margin-left="0.5in" margin-right="0.75in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="2"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after"/></fo:simple-page-master><fo:page-sequence-master master-name="titlepage"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="titlepage-first" page-position="first"/><fo:conditional-page-master-reference master-reference="titlepage-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="titlepage-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="lot"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="lot-first" page-position="first"/><fo:conditional-page-master-reference master-reference="lot-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="lot-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="front"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="front-first" page-position="first"/><fo:conditional-page-master-reference master-reference="front-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="front-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="body"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="body-first" page-position="first"/><fo:conditional-page-master-reference master-reference="body-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="body-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="back"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="back-first" page-position="first"/><fo:conditional-page-master-reference master-reference="back-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="back-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="index"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="index-first" page-position="first"/><fo:conditional-page-master-reference master-reference="index-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="index-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master></fo:layout-master-set><fo:declarations xmlns:fox="http://xmlgraphics.apache.org/fop/extensions"><x:xmpmeta xmlns:x="adobe:ns:meta/"><rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"><rdf:Description xmlns:dc="http://purl.org/dc/elements/1.1/" rdf:about=""><dc:title>Backbone.js on Rails</dc:title></rdf:Description><rdf:Description xmlns:pdf="http://ns.adobe.com/pdf/1.3/" rdf:about=""/><rdf:Description xmlns:xmp="http://ns.adobe.com/xap/1.0/" rdf:about=""><xmp:CreatorTool>DocBook XSL Stylesheets with Apache FOP</xmp:CreatorTool></rdf:Description></rdf:RDF></x:xmpmeta></fo:declarations><fo:bookmark-tree><fo:bookmark internal-destination="id431626" starting-state="hide"><fo:bookmark-title>Backbone.js on Rails</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="toc...id431626"><fo:bookmark-title>Table of Contents</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_preface_section_unstarted" starting-state="hide"><fo:bookmark-title>1. Preface (section unstarted)</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_getting_up_to_speed_section_unstarted" starting-state="hide"><fo:bookmark-title>2. Getting up to speed (section unstarted)</fo:bookmark-title><fo:bookmark internal-destination="_backbone_js_online_resources" starting-state="hide"><fo:bookmark-title>2.1. Backbone.js online resources</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_javascript_online_resources_and_books" starting-state="hide"><fo:bookmark-title>2.2. JavaScript online resources and books</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="_introduction_section_unstarted" starting-state="hide"><fo:bookmark-title>3. Introduction (section unstarted)</fo:bookmark-title><fo:bookmark internal-destination="_why_use_backbone_js" starting-state="hide"><fo:bookmark-title>3.1. Why use Backbone.js</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_when_not_to_use_backbone_js" starting-state="hide"><fo:bookmark-title>3.2. When not to use Backbone.js</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_why_not_sproutcore_cappuccino_knockout_js_spine_etc" starting-state="hide"><fo:bookmark-title>3.3. Why not SproutCore, Cappuccino, Knockout.js, Spine, etc.</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_the_example_application" starting-state="hide"><fo:bookmark-title>3.4. The Example Application</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="_organization" starting-state="hide"><fo:bookmark-title>4. Organization</fo:bookmark-title><fo:bookmark internal-destination="_backbone_js_and_mvc" starting-state="hide"><fo:bookmark-title>4.1. Backbone.js and MVC</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_what_goes_where" starting-state="hide"><fo:bookmark-title>4.2. What Goes Where</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_namespacing_your_application" starting-state="hide"><fo:bookmark-title>4.3. Namespacing your application</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_mixins" starting-state="hide"><fo:bookmark-title>4.4. Mixins</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="_rails_integration" starting-state="hide"><fo:bookmark-title>5. Rails Integration</fo:bookmark-title><fo:bookmark internal-destination="_organizing_your_backbone_js_code_in_a_rails_app" starting-state="hide"><fo:bookmark-title>5.1. Organizing your Backbone.js code in a Rails app</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_rails_3_0_and_prior" starting-state="hide"><fo:bookmark-title>5.2. Rails 3.0 and prior</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_rails_3_1" starting-state="hide"><fo:bookmark-title>5.3. Rails 3.1</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_an_overview_of_the_stack_connecting_rails_and_backbone_js" starting-state="hide"><fo:bookmark-title>5.4. An Overview of the Stack: Connecting Rails and Backbone.js</fo:bookmark-title><fo:bookmark internal-destination="_setting_up_rails_models" starting-state="hide"><fo:bookmark-title>5.4.1. Setting Up Rails Models</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_setting_up_rails_controllers" starting-state="hide"><fo:bookmark-title>5.4.2. Setting Up Rails Controllers</fo:bookmark-title><fo:bookmark internal-destination="_validations_and_your_http_api" starting-state="hide"><fo:bookmark-title>5.4.2.1. Validations and your HTTP API</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="_setting_up_views" starting-state="hide"><fo:bookmark-title>5.4.3. Setting Up Views</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="_customizing_your_rails_generated_json" starting-state="hide"><fo:bookmark-title>5.5. Customizing your Rails-generated JSON</fo:bookmark-title><fo:bookmark internal-destination="_activerecord_base_include_root_in_json" starting-state="hide"><fo:bookmark-title>5.5.1. ActiveRecord::Base.include_root_in_json</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="_converting_an_existing_page_view_area_to_use_backbone_js" starting-state="hide"><fo:bookmark-title>5.6. Converting an existing page/view area to use Backbone.js</fo:bookmark-title><fo:bookmark internal-destination="_breaking_out_the_taskview" starting-state="hide"><fo:bookmark-title>5.6.1. Breaking out the TaskView</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="_automatically_using_the_rails_authentication_token" starting-state="hide"><fo:bookmark-title>5.7. Automatically using the Rails authentication token</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="_routers_views_and_templates" starting-state="hide"><fo:bookmark-title>6. Routers, Views, and Templates</fo:bookmark-title><fo:bookmark internal-destination="_view_explanation_chapter_unstarted" starting-state="hide"><fo:bookmark-title>6.1. View explanation (chapter unstarted)</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_routers_chapter_unstarted" starting-state="hide"><fo:bookmark-title>6.2. Routers (chapter unstarted)</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_templating_strategy_chapter_unstarted" starting-state="hide"><fo:bookmark-title>6.3. Templating strategy (chapter unstarted)</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_view_helpers_chapter_unstarted" starting-state="hide"><fo:bookmark-title>6.4. View helpers (chapter unstarted)</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_form_helpers_chapter_unstarted" starting-state="hide"><fo:bookmark-title>6.5. Form helpers (chapter unstarted)</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_event_binding" starting-state="hide"><fo:bookmark-title>6.6. Event binding</fo:bookmark-title><fo:bookmark internal-destination="_binding_to_dom_events_within_the_view_element" starting-state="hide"><fo:bookmark-title>6.6.1. Binding to DOM events within the view element</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_binding_to_events_triggered_by_literal_this_model_literal_or_literal_this_collection_literal" starting-state="hide"><fo:bookmark-title>6.6.2. Binding to events triggered by this.model or this.collection</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_binding_to_custom_events" starting-state="hide"><fo:bookmark-title>6.6.3. Binding to custom events</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="_cleaning_up_unbinding" starting-state="hide"><fo:bookmark-title>6.7. Cleaning Up: Unbinding</fo:bookmark-title><fo:bookmark internal-destination="_why_do_i_have_to_unbind_events" starting-state="hide"><fo:bookmark-title>6.7.1. Why do I have to unbind events?</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_unbinding_dom_events" starting-state="hide"><fo:bookmark-title>6.7.2. Unbinding DOM events</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_unbinding_model_and_collection_events" starting-state="hide"><fo:bookmark-title>6.7.3. Unbinding model and collection events</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_keep_track_of_literal_bind_literal_calls_to_unbind_more_easily" starting-state="hide"><fo:bookmark-title>6.7.4. Keep track of bind() calls to unbind more easily</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_unbinding_custom_events" starting-state="hide"><fo:bookmark-title>6.7.5. Unbinding custom events</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_establish_a_convention_for_consistent_and_correct_unbinding" starting-state="hide"><fo:bookmark-title>6.7.6. Establish a convention for consistent and correct unbinding</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="_swapping_router" starting-state="hide"><fo:bookmark-title>6.8. Swapping router</fo:bookmark-title><fo:bookmark internal-destination="swapping-internals" starting-state="hide"><fo:bookmark-title>6.8.1. SwappingRouter and Backbone internals</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="_composite_views" starting-state="hide"><fo:bookmark-title>6.9. Composite views</fo:bookmark-title><fo:bookmark internal-destination="_refactoring_from_a_large_view" starting-state="hide"><fo:bookmark-title>6.9.1. Refactoring from a large view</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_cleaning_up_views_properly" starting-state="hide"><fo:bookmark-title>6.9.2. Cleaning up views properly</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="_how_to_use_multiple_views_on_the_same_model_collection_chapter_unstarted" starting-state="hide"><fo:bookmark-title>6.10. How to use multiple views on the same model/collection (chapter unstarted)</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_internationalization_chapter_unstarted" starting-state="hide"><fo:bookmark-title>6.11. Internationalization (chapter unstarted)</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="_models_and_collections" starting-state="hide"><fo:bookmark-title>7. Models and collections</fo:bookmark-title><fo:bookmark internal-destination="_naming_conventions_chapter_unstarted" starting-state="hide"><fo:bookmark-title>7.1. Naming conventions (chapter unstarted)</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_nested_resources_chapter_unstarted" starting-state="hide"><fo:bookmark-title>7.2. Nested resources (chapter unstarted)</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_model_associations" starting-state="hide"><fo:bookmark-title>7.3. Model associations</fo:bookmark-title><fo:bookmark internal-destination="_belongs_to_associations" starting-state="hide"><fo:bookmark-title>7.3.1. Belongs to associations</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_has_many_associations" starting-state="hide"><fo:bookmark-title>7.3.2. Has many associations</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="_filters_and_sorting" starting-state="hide"><fo:bookmark-title>7.4. Filters and sorting</fo:bookmark-title><fo:bookmark internal-destination="_filters" starting-state="hide"><fo:bookmark-title>7.4.1. Filters</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_sorting" starting-state="hide"><fo:bookmark-title>7.4.2. Sorting</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="_client_server_duplicated_business_logic_chapter_unstarted" starting-state="hide"><fo:bookmark-title>7.5. Client/Server duplicated business logic (chapter unstarted)</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_validations_chapter_unstarted" starting-state="hide"><fo:bookmark-title>7.6. Validations (chapter unstarted)</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_synchronizing_between_clients_chapter_unstarted" starting-state="hide"><fo:bookmark-title>7.7. Synchronizing between clients (chapter unstarted)</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="_testing_section_unstarted" starting-state="hide"><fo:bookmark-title>8. Testing (section unstarted)</fo:bookmark-title><fo:bookmark internal-destination="_full_stack_integration_testing" starting-state="hide"><fo:bookmark-title>8.1. Full-stack integration testing</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_isolated_unit_testing" starting-state="hide"><fo:bookmark-title>8.2. Isolated unit testing</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="_the_javascript_language_section_unstarted" starting-state="hide"><fo:bookmark-title>9. The JavaScript language (section unstarted)</fo:bookmark-title><fo:bookmark internal-destination="_model_attribute_types_and_serialization" starting-state="hide"><fo:bookmark-title>9.1. Model attribute types and serialization</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_context_binding_js_literal_this_literal" starting-state="hide"><fo:bookmark-title>9.2. Context binding (JS this)</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_coffeescript_with_backbone_js" starting-state="hide"><fo:bookmark-title>9.3. CoffeeScript with Backbone.js</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="_security_stub" starting-state="hide"><fo:bookmark-title>10. Security (stub)</fo:bookmark-title><fo:bookmark internal-destination="_xss_with_json_bootstrapping_stub" starting-state="hide"><fo:bookmark-title>10.1. XSS with JSON bootstrapping (stub)</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="_xss_in_html_templates_stub" starting-state="hide"><fo:bookmark-title>10.2. XSS in HTML templates (stub)</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="_performance_stub" starting-state="hide"><fo:bookmark-title>11. Performance (stub)</fo:bookmark-title><fo:bookmark internal-destination="_dependency_choice" starting-state="hide"><fo:bookmark-title>11.1. Dependency choice</fo:bookmark-title></fo:bookmark></fo:bookmark></fo:bookmark-tree><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="id431626"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_preface_section_unstarted"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_getting_up_to_speed_section_unstarted"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_backbone_js_online_resources"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_javascript_online_resources_and_books"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_introduction_section_unstarted"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_why_use_backbone_js"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_when_not_to_use_backbone_js"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_why_not_sproutcore_cappuccino_knockout_js_spine_etc"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_the_example_application"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_organization"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_backbone_js_and_mvc"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_what_goes_where"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_namespacing_your_application"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_mixins"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_rails_integration"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_organizing_your_backbone_js_code_in_a_rails_app"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_rails_3_0_and_prior"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_rails_3_1"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_an_overview_of_the_stack_connecting_rails_and_backbone_js"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_setting_up_rails_models"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_setting_up_rails_controllers"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_validations_and_your_http_api"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_setting_up_views"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_customizing_your_rails_generated_json"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_activerecord_base_include_root_in_json"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_converting_an_existing_page_view_area_to_use_backbone_js"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_breaking_out_the_taskview"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_automatically_using_the_rails_authentication_token"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_routers_views_and_templates"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_view_explanation_chapter_unstarted"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_routers_chapter_unstarted"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_templating_strategy_chapter_unstarted"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_view_helpers_chapter_unstarted"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_form_helpers_chapter_unstarted"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_event_binding"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_binding_to_dom_events_within_the_view_element"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_binding_to_events_triggered_by_literal_this_model_literal_or_literal_this_collection_literal"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_binding_to_custom_events"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_cleaning_up_unbinding"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_why_do_i_have_to_unbind_events"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_unbinding_dom_events"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_unbinding_model_and_collection_events"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_keep_track_of_literal_bind_literal_calls_to_unbind_more_easily"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_unbinding_custom_events"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_establish_a_convention_for_consistent_and_correct_unbinding"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_swapping_router"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="swapping-internals"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_composite_views"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_refactoring_from_a_large_view"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_cleaning_up_views_properly"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_how_to_use_multiple_views_on_the_same_model_collection_chapter_unstarted"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_internationalization_chapter_unstarted"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_models_and_collections"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_naming_conventions_chapter_unstarted"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_nested_resources_chapter_unstarted"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_model_associations"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_belongs_to_associations"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_has_many_associations"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_filters_and_sorting"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_filters"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_sorting"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_client_server_duplicated_business_logic_chapter_unstarted"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_validations_chapter_unstarted"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_synchronizing_between_clients_chapter_unstarted"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_testing_section_unstarted"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_full_stack_integration_testing"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_isolated_unit_testing"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_the_javascript_language_section_unstarted"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_model_attribute_types_and_serialization"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_context_binding_js_literal_this_literal"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_coffeescript_with_backbone_js"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_security_stub"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_xss_with_json_bootstrapping_stub"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_xss_in_html_templates_stub"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_performance_stub"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="_dependency_choice"/><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="false" master-reference="body" language="en" format="1" initial-page-number="1" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Backbone.js on Rails</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Backbone.js on Rails</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="1pc" end-indent="0pt"><fo:block id="id431626"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block start-indent="0pt" text-align="center"><fo:block keep-with-next.within-column="always" font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="12pt" space-before.minimum="12pt * 0.8" space-before.maximum="12pt * 1.2" hyphenate="false" text-align="center" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Backbone.js on Rails</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="toc...id431626" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em"><fo:block><fo:block><fo:block space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em" space-after="0.5em" margin-left="0pt" start-indent="0pt" font-size="17.28pt" font-weight="bold" font-family="sans-serif,Symbol,ZapfDingbats">Table of Contents</fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_preface_section_unstarted">1. Preface (section unstarted)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_preface_section_unstarted"><fo:page-number-citation ref-id="_preface_section_unstarted"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_getting_up_to_speed_section_unstarted">2. Getting up to speed (section unstarted)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_getting_up_to_speed_section_unstarted"><fo:page-number-citation ref-id="_getting_up_to_speed_section_unstarted"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.id431626._getting_up_to_speed_section_unstarted" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_backbone_js_online_resources">2.1. Backbone.js online resources</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_backbone_js_online_resources"><fo:page-number-citation ref-id="_backbone_js_online_resources"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_javascript_online_resources_and_books">2.2. JavaScript online resources and books</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_javascript_online_resources_and_books"><fo:page-number-citation ref-id="_javascript_online_resources_and_books"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_introduction_section_unstarted">3. Introduction (section unstarted)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_introduction_section_unstarted"><fo:page-number-citation ref-id="_introduction_section_unstarted"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.id431626._introduction_section_unstarted" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_why_use_backbone_js">3.1. Why use Backbone.js</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_why_use_backbone_js"><fo:page-number-citation ref-id="_why_use_backbone_js"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_when_not_to_use_backbone_js">3.2. When not to use Backbone.js</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_when_not_to_use_backbone_js"><fo:page-number-citation ref-id="_when_not_to_use_backbone_js"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_why_not_sproutcore_cappuccino_knockout_js_spine_etc">3.3. Why not SproutCore, Cappuccino, Knockout.js, Spine, etc.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_why_not_sproutcore_cappuccino_knockout_js_spine_etc"><fo:page-number-citation ref-id="_why_not_sproutcore_cappuccino_knockout_js_spine_etc"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_the_example_application">3.4. The Example Application</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_the_example_application"><fo:page-number-citation ref-id="_the_example_application"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_organization">4. Organization</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_organization"><fo:page-number-citation ref-id="_organization"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.id431626._organization" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_backbone_js_and_mvc">4.1. Backbone.js and MVC</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_backbone_js_and_mvc"><fo:page-number-citation ref-id="_backbone_js_and_mvc"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_what_goes_where">4.2. What Goes Where</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_what_goes_where"><fo:page-number-citation ref-id="_what_goes_where"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_namespacing_your_application">4.3. Namespacing your application</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_namespacing_your_application"><fo:page-number-citation ref-id="_namespacing_your_application"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_mixins">4.4. Mixins</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_mixins"><fo:page-number-citation ref-id="_mixins"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_rails_integration">5. Rails Integration</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_rails_integration"><fo:page-number-citation ref-id="_rails_integration"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.id431626._rails_integration" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_organizing_your_backbone_js_code_in_a_rails_app">5.1. Organizing your Backbone.js code in a Rails app</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_organizing_your_backbone_js_code_in_a_rails_app"><fo:page-number-citation ref-id="_organizing_your_backbone_js_code_in_a_rails_app"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_rails_3_0_and_prior">5.2. Rails 3.0 and prior</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_rails_3_0_and_prior"><fo:page-number-citation ref-id="_rails_3_0_and_prior"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_rails_3_1">5.3. Rails 3.1</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_rails_3_1"><fo:page-number-citation ref-id="_rails_3_1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_an_overview_of_the_stack_connecting_rails_and_backbone_js">5.4. An Overview of the Stack: Connecting Rails and Backbone.js</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_an_overview_of_the_stack_connecting_rails_and_backbone_js"><fo:page-number-citation ref-id="_an_overview_of_the_stack_connecting_rails_and_backbone_js"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_customizing_your_rails_generated_json">5.5. Customizing your Rails-generated JSON</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_customizing_your_rails_generated_json"><fo:page-number-citation ref-id="_customizing_your_rails_generated_json"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_converting_an_existing_page_view_area_to_use_backbone_js">5.6. Converting an existing page/view area to use Backbone.js</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_converting_an_existing_page_view_area_to_use_backbone_js"><fo:page-number-citation ref-id="_converting_an_existing_page_view_area_to_use_backbone_js"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_automatically_using_the_rails_authentication_token">5.7. Automatically using the Rails authentication token</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_automatically_using_the_rails_authentication_token"><fo:page-number-citation ref-id="_automatically_using_the_rails_authentication_token"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_routers_views_and_templates">6. Routers, Views, and Templates</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_routers_views_and_templates"><fo:page-number-citation ref-id="_routers_views_and_templates"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.id431626._routers_views_and_templates" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_view_explanation_chapter_unstarted">6.1. View explanation (chapter unstarted)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_view_explanation_chapter_unstarted"><fo:page-number-citation ref-id="_view_explanation_chapter_unstarted"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_routers_chapter_unstarted">6.2. Routers (chapter unstarted)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_routers_chapter_unstarted"><fo:page-number-citation ref-id="_routers_chapter_unstarted"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_templating_strategy_chapter_unstarted">6.3. Templating strategy (chapter unstarted)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_templating_strategy_chapter_unstarted"><fo:page-number-citation ref-id="_templating_strategy_chapter_unstarted"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_view_helpers_chapter_unstarted">6.4. View helpers (chapter unstarted)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_view_helpers_chapter_unstarted"><fo:page-number-citation ref-id="_view_helpers_chapter_unstarted"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_form_helpers_chapter_unstarted">6.5. Form helpers (chapter unstarted)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_form_helpers_chapter_unstarted"><fo:page-number-citation ref-id="_form_helpers_chapter_unstarted"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_event_binding">6.6. Event binding</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_event_binding"><fo:page-number-citation ref-id="_event_binding"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_cleaning_up_unbinding">6.7. Cleaning Up: Unbinding</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_cleaning_up_unbinding"><fo:page-number-citation ref-id="_cleaning_up_unbinding"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_swapping_router">6.8. Swapping router</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_swapping_router"><fo:page-number-citation ref-id="_swapping_router"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_composite_views">6.9. Composite views</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_composite_views"><fo:page-number-citation ref-id="_composite_views"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_how_to_use_multiple_views_on_the_same_model_collection_chapter_unstarted">6.10. How to use multiple views on the same model/collection (chapter unstarted)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_how_to_use_multiple_views_on_the_same_model_collection_chapter_unstarted"><fo:page-number-citation ref-id="_how_to_use_multiple_views_on_the_same_model_collection_chapter_unstarted"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_internationalization_chapter_unstarted">6.11. Internationalization (chapter unstarted)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_internationalization_chapter_unstarted"><fo:page-number-citation ref-id="_internationalization_chapter_unstarted"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_models_and_collections">7. Models and collections</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_models_and_collections"><fo:page-number-citation ref-id="_models_and_collections"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.id431626._models_and_collections" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_naming_conventions_chapter_unstarted">7.1. Naming conventions (chapter unstarted)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_naming_conventions_chapter_unstarted"><fo:page-number-citation ref-id="_naming_conventions_chapter_unstarted"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_nested_resources_chapter_unstarted">7.2. Nested resources (chapter unstarted)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_nested_resources_chapter_unstarted"><fo:page-number-citation ref-id="_nested_resources_chapter_unstarted"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_model_associations">7.3. Model associations</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_model_associations"><fo:page-number-citation ref-id="_model_associations"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_filters_and_sorting">7.4. Filters and sorting</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_filters_and_sorting"><fo:page-number-citation ref-id="_filters_and_sorting"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_client_server_duplicated_business_logic_chapter_unstarted">7.5. Client/Server duplicated business logic (chapter unstarted)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_client_server_duplicated_business_logic_chapter_unstarted"><fo:page-number-citation ref-id="_client_server_duplicated_business_logic_chapter_unstarted"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_validations_chapter_unstarted">7.6. Validations (chapter unstarted)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_validations_chapter_unstarted"><fo:page-number-citation ref-id="_validations_chapter_unstarted"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_synchronizing_between_clients_chapter_unstarted">7.7. Synchronizing between clients (chapter unstarted)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_synchronizing_between_clients_chapter_unstarted"><fo:page-number-citation ref-id="_synchronizing_between_clients_chapter_unstarted"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_testing_section_unstarted">8. Testing (section unstarted)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_testing_section_unstarted"><fo:page-number-citation ref-id="_testing_section_unstarted"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.id431626._testing_section_unstarted" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_full_stack_integration_testing">8.1. Full-stack integration testing</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_full_stack_integration_testing"><fo:page-number-citation ref-id="_full_stack_integration_testing"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_isolated_unit_testing">8.2. Isolated unit testing</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_isolated_unit_testing"><fo:page-number-citation ref-id="_isolated_unit_testing"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_the_javascript_language_section_unstarted">9. The JavaScript language (section unstarted)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_the_javascript_language_section_unstarted"><fo:page-number-citation ref-id="_the_javascript_language_section_unstarted"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.id431626._the_javascript_language_section_unstarted" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_model_attribute_types_and_serialization">9.1. Model attribute types and serialization</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_model_attribute_types_and_serialization"><fo:page-number-citation ref-id="_model_attribute_types_and_serialization"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_context_binding_js_literal_this_literal">9.2. Context binding (JS <fo:inline font-size="10pt" font-family="monospace">this</fo:inline>)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_context_binding_js_literal_this_literal"><fo:page-number-citation ref-id="_context_binding_js_literal_this_literal"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_coffeescript_with_backbone_js">9.3. CoffeeScript with Backbone.js</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_coffeescript_with_backbone_js"><fo:page-number-citation ref-id="_coffeescript_with_backbone_js"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_security_stub">10. Security (stub)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_security_stub"><fo:page-number-citation ref-id="_security_stub"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.id431626._security_stub" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_xss_with_json_bootstrapping_stub">10.1. XSS with JSON bootstrapping (stub)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_xss_with_json_bootstrapping_stub"><fo:page-number-citation ref-id="_xss_with_json_bootstrapping_stub"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_xss_in_html_templates_stub">10.2. XSS in HTML templates (stub)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_xss_in_html_templates_stub"><fo:page-number-citation ref-id="_xss_in_html_templates_stub"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_performance_stub">11. Performance (stub)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_performance_stub"><fo:page-number-citation ref-id="_performance_stub"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.id431626._performance_stub" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="_dependency_choice">11.1. Dependency choice</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="_dependency_choice"><fo:page-number-citation ref-id="_dependency_choice"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block id="_preface_section_unstarted"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Preface (section unstarted)</fo:marker><fo:block font-size="24.8832pt">1. Preface (section unstarted)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_getting_up_to_speed_section_unstarted"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Getting up to speed (section unstarted)</fo:marker><fo:block font-size="24.8832pt">2. Getting up to speed (section unstarted)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_backbone_js_online_resources"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Backbone.js online resources</fo:marker><fo:block font-size="20.736pt">2.1. Backbone.js online resources</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_javascript_online_resources_and_books"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">JavaScript online resources and books</fo:marker><fo:block font-size="20.736pt">2.2. JavaScript online resources and books</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_introduction_section_unstarted"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Introduction (section unstarted)</fo:marker><fo:block font-size="24.8832pt">3. Introduction (section unstarted)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_why_use_backbone_js"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Why use Backbone.js</fo:marker><fo:block font-size="20.736pt">3.1. Why use Backbone.js</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_when_not_to_use_backbone_js"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">When not to use Backbone.js</fo:marker><fo:block font-size="20.736pt">3.2. When not to use Backbone.js</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_why_not_sproutcore_cappuccino_knockout_js_spine_etc"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Why not SproutCore, Cappuccino, Knockout.js, Spine, etc.</fo:marker><fo:block font-size="20.736pt">3.3. Why not SproutCore, Cappuccino, Knockout.js, Spine, etc.</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_the_example_application"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">The Example Application</fo:marker><fo:block font-size="20.736pt">3.4. The Example Application</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Rails 3.1.0.rc5</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Ruby 1.9.2</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Backbone.js and Underscore.js are the non-minified versions. This is for
informational purposes, but also because the Rails 3.1 asset pipeline will
compress and minify them.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">While Rails 3.1 defaults to CoffeeScript, we have decided to make all example
code normal Javascript as we believe that will be the most understandable to
the current readers.</fo:block></fo:block></fo:block><fo:block id="_organization"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Organization</fo:marker><fo:block font-size="24.8832pt">4. Organization</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_backbone_js_and_mvc"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Backbone.js and MVC</fo:marker><fo:block font-size="20.736pt">4.1. Backbone.js and MVC</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Model–View–Controller (MVC) is an architectural pattern used in many
applications to isolate "domain logic" (the application logic for the user)
from the user interface (input and presentation).</fo:block><fo:block id="id480494" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always"><fo:block font-weight="bold" font-size="14.4pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" keep-with-next.within-column="always">Figure 1. Model-view-controller concept</fo:block><fo:block id="id480500"><fo:external-graphic src="url(image/MVCDiagram.png)" width="auto" height="auto" content-width="auto" content-height="auto"/></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In the above diagram a solid line represents a direct association and a dashed
line represents an indirect association (for example, via an observer).</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">As a user of Rails, you’re likely already familiar with the concept of MVC and
the benefits that the separation of concerns can give you. However, Rails itself
is not doing "traditional" MVC. A traditional MVC is event-based. This means
that the views trigger events which the controller figures out what to do with.
It can be argued that the requests generated by the browser are the "events" in
Rails, however, due to the single-threaded, request-response nature of the web,
the control flow between the different levels of MVC is much more
straightforward.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Given that Javascript has events, and that much of the interactions between the
different components of Backbone.js in the browser are not limited to
request/response, programming with Backbone.js is in a lot of ways more like
working with a traditional MVC architecture.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">That being said, technically speaking, Backbone.js is <fo:inline font-style="italic">not</fo:inline> MVC, and this was
acknowledged by the creators of Backbone.js when they renamed Controllers to
Routers in version 0.5.0.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">So what is Backbone.js then if not MVC? Technically speaking, it’s just the
Models and the Views with a Router to handle flow between them. In Backbone.js
the views will handle many of the aspects that controllers would typically
handle, such as actually figuring out what to do next and what to render.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">While you could do it, the benefit of actually introducing a Controller in your
application would be limited, and the more pragmatic approach is to realize the
great organization that Backbone.js gives you is much better than what you had
before. The fact that it doesn’t have a nice name, or strict adherence to a
pattern, isn’t worth worrying about.</fo:block></fo:block><fo:block id="_what_goes_where"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">What Goes Where</fo:marker><fo:block font-size="20.736pt">4.2. What Goes Where</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Part of the initial learning curve of Backbone.js can be figuring out what goes
where, and mapping it to your expectations set by working with Rails. In Rails
we have Models, Views, Controllers, and Routers. In Backbone.js, we have
Models, Collections, Views, Templates, and Routers.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The models in Backbone.js and Rails are analogous. Backbone.js collections are
just ordered sets of models.  Because it lacks controllers, Backbone.js routers
and views work together to pick up the functionality provided by Rails
controllers. Finally, in Rails, when we say views, we actually mean templates.
In Backbone.js, however, you have a separation between the view and templates.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Once you introduce Backbone.js into your stack, you grow the layers in your
stack by four levels. This can be daunting at first, and frankly, at times it
can be difficult to keep everything going on in your application straight.
Ultimately, the additional organization and functionality of Backbone.js
outweighs the costs, so let’s break it down.</fo:block><fo:block font-weight="bold" font-size="14.4pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" keep-with-next.within-column="always">Rails</fo:block><fo:list-block id="id480587" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="id480591" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
Model
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id480597" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
Controller
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id480603" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
View
</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block font-weight="bold" font-size="14.4pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" keep-with-next.within-column="always">Backbone.js</fo:block><fo:list-block id="id480610" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="id480614" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
Model and Collection
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id480622" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
Router
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id480628" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
View
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id480634" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
Template
</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In a typical Rails and Backbone.js application, the initial interaction between
the layers will be as follows:</fo:block><fo:list-block id="id480650" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="id480652" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
A request from a user comes in the <fo:inline font-weight="bold">Rails router</fo:inline> identifies what should
  handle the request based on the URL
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id480666" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
The <fo:inline font-weight="bold">Rails controller action</fo:inline> to handle the request is called, some initial
  processing may be performed
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id480681" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
The <fo:inline font-weight="bold">Rails view template</fo:inline> is rendered and returned to the user’s browser
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id480694" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
The <fo:inline font-weight="bold">Rails view template</fo:inline> will include <fo:inline font-weight="bold">Backbone.js initialization</fo:inline>, usually
  this is populating some <fo:inline font-weight="bold">Backbone collections</fo:inline> as sets of <fo:inline font-weight="bold">Backbone models</fo:inline>
  with JSON data provided by the <fo:inline font-weight="bold">Rails view</fo:inline>
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id480727" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
The <fo:inline font-weight="bold">Backbone.js router</fo:inline> determines which of its methods should handle the
  display based on the URL
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id480741" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
The <fo:inline font-weight="bold">Backbone.js router</fo:inline> method calls that method, some initial processing
  may be performed, and one or more <fo:inline font-weight="bold">Backbone.js views</fo:inline> are rendered
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id480760" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
The <fo:inline font-weight="bold">Backbone.js view</fo:inline> reads <fo:inline font-weight="bold">templates</fo:inline> and uses <fo:inline font-weight="bold">Backbone.js</fo:inline> models to
  render itself onto the page
</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">At this point, the user will see a nice page in their browser and be able to
interact with it. The user interacting with elements on the page will trigger
actions to be taken at any level of the above sequence: <fo:inline font-weight="bold">Backbone.js model</fo:inline>,
<fo:inline font-weight="bold">Backbone.js views</fo:inline>, <fo:inline font-weight="bold">Backbone.js router</fo:inline>, or requests to the remote server.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Requests to the remote server may be any one of the following:</fo:block><fo:list-block id="id480815" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="id480817" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
At the <fo:inline font-weight="bold">Backbone.js model</fo:inline> or <fo:inline font-weight="bold">Backbone.js collection</fo:inline> level, communicating
  with Rails via JSON.
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id480834" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
Normal Ajax requests, not using Backbone.js at all.
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id480842" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
Normal requests that don’t hit Backbone.js and trigger a full page reload.
</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Which of the above remote server interactions you use will depend upon the
desired result, and the type of user interface. This book should help you
understand which interaction you’ll want to choose for each portion of your
application.</fo:block></fo:block><fo:block id="_namespacing_your_application"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Namespacing your application</fo:marker><fo:block font-size="20.736pt">4.3. Namespacing your application</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">You will want to create an object in Javascript for your Backbone.js
application to reside. This variable will serve as a namespace for your
Backbone.js application. Namespacing all of the Javascript is desirable to
avoid potential collisions in naming. For example, it’s possible that a
Javascript library you want to use might also create a Task variable. If you
didn’t namespace your Task model then this would conflict.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">This variable includes a place to hold Models, Collections, Views, and Routes,
and an init method which will be called to initialize the application. Its
very common to create a new Router in the init function, and
Backbone.history.start() must be called in order to route the initial URL.
This app variable will look like the following.</fo:block><fo:block id="id480878" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var ExampleApp = {
  Models: {},
  Collections: {},
  Views: {},
  Routers: {},
  init: function() {
    new ExampleApp.Routers.Tasks();
    Backbone.history.start();
  }
};</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">You can find this file in the example app in
<fo:inline font-size="10pt" font-family="monospace">app/assets/javascripts/example_app.js</fo:inline>.</fo:block></fo:block><fo:block id="_mixins"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Mixins</fo:marker><fo:block font-size="20.736pt">4.4. Mixins</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Backbone provides a basic mechanism for inheritance.  Often you’ll want to build a collection of related, reusable behavior and include that in several classes that already inherit from a Backbone base class.  In these cases, you’ll want to use a <fo:basic-link external-destination="url(http://en.wikipedia.org/wiki/Mixin)">mixin</fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://en.wikipedia.org/wiki/Mixin)">http://en.wikipedia.org/wiki/Mixin</fo:basic-link>]</fo:inline>.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Backbone includes <fo:basic-link external-destination="url(http://documentcloud.github.com/backbone/#Events)">Backbone.Events</fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://documentcloud.github.com/backbone/#Events)">http://documentcloud.github.com/backbone/#Events</fo:basic-link>]</fo:inline> as an example of a mixin.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Here, we create a mixin named <fo:inline font-size="10pt" font-family="monospace">Observer</fo:inline> that contains behavior for binding to events in a fashion that can be cleaned up later:</fo:block><fo:block id="id480942" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var Observer = {
  bindTo: function(source, event, callback) {
    source.bind(event, callback, this);
    this.bindings.push({ source: source, event: event, callback: callback });
  },

  unbindFromAll: function() {
    _.each(this.bindings, function(binding) {
      binding.source.unbind(binding.event, binding.callback);
    });
    this.bindings = [];
  }
};</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">We can mix <fo:inline font-size="10pt" font-family="monospace">Observer</fo:inline> into a class by using Underscore’s <fo:inline font-size="10pt" font-family="monospace">_.extend</fo:inline> on the prototype of that class:</fo:block><fo:block id="id480971" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">SomeCollectionView = Backbone.Collection.extend({
  initialize: function() {
    this.bindTo(this.collection, "change", this.render);
  },

  leave: function() {
    this.unbindFromAll(); // calling a method defined in the mixin
    this.remove();
  }
});

_.extend(SomeCollectionView.prototype, Observer);</fo:block></fo:block></fo:block><fo:block id="_rails_integration"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Rails Integration</fo:marker><fo:block font-size="24.8832pt">5. Rails Integration</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_organizing_your_backbone_js_code_in_a_rails_app"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Organizing your Backbone.js code in a Rails app</fo:marker><fo:block font-size="20.736pt">5.1. Organizing your Backbone.js code in a Rails app</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">When using Backbone.js in a Rails app, you’ll have two kinds of
Backbone.js-related assets: classes and templates.</fo:block></fo:block><fo:block id="_rails_3_0_and_prior"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Rails 3.0 and prior</fo:marker><fo:block font-size="20.736pt">5.2. Rails 3.0 and prior</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">With Rails 3.0 and prior, store your Backbone.js classes in
<fo:inline font-size="10pt" font-family="monospace">public/javascripts</fo:inline>:</fo:block><fo:block id="id481027" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">public/
  javascripts/
    jquery.js
    jquery-ui.js
    collections/
      users.js
      todos.js
    models/
      user.js
      todo.js
    routers/
      users_router.js
      todos_router.js
    views/
      users/
        users_index.js
        users_new.js
        users_edit.js
      todos/
        todos_index.js</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If you are using templates, we prefer storing them in <fo:inline font-size="10pt" font-family="monospace">app/templates</fo:inline> to keep
them separated from the server views:</fo:block><fo:block id="id481033" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">app/
  views/
    pages/
      home.html.erb
      terms.html.erb
      privacy.html.erb
      about.html.erb
  templates/
    users/
      index.jst
      new.jst
      edit.jst
    todos/
      index.jst
      show.jst</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">On Rails 3.0 and prior apps, we use Jammit for packaging assets and
precompiling templates:</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:basic-link external-destination="url(http://documentcloud.github.com/jammit/)">http://documentcloud.github.com/jammit/</fo:basic-link><fo:block/>
<fo:basic-link external-destination="url(http://documentcloud.github.com/jammit/#jst)">http://documentcloud.github.com/jammit/#jst</fo:basic-link></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Jammit will make your templates available in a top-level JST object. For
example, to access the above todos/index.jst template, you would refer to it
as:</fo:block><fo:block id="id481085" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">JST['todos/index']</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Variables can be passed to the templates by passing a Hash to the template, as
shown below.</fo:block><fo:block id="id481100" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">JST['todos/index']({ model: this.model })</fo:block><fo:block id="id481109" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in"><fo:block keep-with-next.within-column="always" font-size="14pt" font-weight="bold" hyphenate="false">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">A note on Jammit and a JST naming gotcha</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">One issue with Jammit that we’ve encountered and worked around is that the JST
template path can change when adding new templates.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">When using Jammit, there is a slightly sticky issue as an app grows from one
template subdirectory to multiple template subdirectories.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Let’s say you place templates in app/templates. You work for a while on the
"Tasks" feature, placing templates under app/templates/tasks. So, window.JST
looks something like:</fo:block><fo:block id="id481142" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">JST['form']
JST['show']
JST['index']</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Now, you add another directory under app/templates, say app/templates/user.
Now, all JST references are prefixed with their parent directory name so they
are unambiguous:</fo:block><fo:block id="id481159" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">JST['tasks/form']
JST['tasks/show']
JST['tasks/index']
JST['users/new']
JST['users/show']
JST['users/index']</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">This breaks existing JST references. You can work around this issue by applying
the following monkeypatch to Jammit, in config/initializers/jammit.rb</fo:block><fo:block id="id481179" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">Jammit::Compressor.class_eval do
  private
  def find_base_path(path)
    File.expand_path(Rails.root.join('app','templates'))
  end
end</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">As applications are moving to Rails 3.1, they’re also moving to Sprockets for
the asset packager.  Until then, many apps are using Jammit for asset
packaging.  We have an open issue and workaround:</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:basic-link external-destination="url(https://github.com/documentcloud/jammit/issues/192)">https://github.com/documentcloud/jammit/issues/192</fo:basic-link></fo:block></fo:block></fo:block></fo:block><fo:block id="_rails_3_1"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Rails 3.1</fo:marker><fo:block font-size="20.736pt">5.3. Rails 3.1</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Rails 3.1 introduces the asset pipeline:</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:basic-link external-destination="url(http://edgeguides.rubyonrails.org/asset_pipeline.html)">http://edgeguides.rubyonrails.org/asset_pipeline.html</fo:basic-link></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">which uses the Sprockets library for preprocessing and packaging assets:</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:basic-link external-destination="url(http://getsprockets.org/)">http://getsprockets.org/</fo:basic-link></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To take advantage of the built-in asset pipeline, organize your Backbone.js
templates and classes in paths available to the asset pipeline.  Classes go in
<fo:inline font-size="10pt" font-family="monospace">app/assets/javascripts/</fo:inline>, and templates go alongside, in
<fo:inline font-size="10pt" font-family="monospace">app/assets/templates/</fo:inline>:</fo:block><fo:block id="id481261" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">app/
  assets/
    javascripts/
      collections/
        todos.js
      models/
        todo.js
      routers/
        todos_router.js
      views/
        todos/
          todos_index.js
    templates/
      todos/
        index.jst.ejs
        show.jst.ejs</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In Rails 3.1, jQuery is provided by the jquery-rails gem, and no longer
needs to be included in your directory structure.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Using Sprockets' preprocessors, we can use templates as before.  Here, we’re
using the EJS template preprocessor to provide the same functionality as
Underscore.js' templates.  It compiles the <fo:inline font-size="10pt" font-family="monospace">*.jst</fo:inline> files and makes them
available on the client side via the <fo:inline font-size="10pt" font-family="monospace">window.JST</fo:inline> object. Identifying the
<fo:inline font-size="10pt" font-family="monospace">.ejs</fo:inline> extension and invoking EJS to compile the templates is managed by
Sprockets, and requires the <fo:inline font-size="10pt" font-family="monospace">ejs</fo:inline> gem to be included in the application
Gemfile.</fo:block><fo:block id="id481321" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in"><fo:block keep-with-next.within-column="always" font-size="14pt" font-weight="bold" hyphenate="false">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Underscore.js templates:
<fo:basic-link external-destination="url(http://documentcloud.github.com/underscore/#template)">http://documentcloud.github.com/underscore/#template</fo:basic-link></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">EJS gem:
<fo:basic-link external-destination="url(https://github.com/sstephenson/ruby-ejs)">https://github.com/sstephenson/ruby-ejs</fo:basic-link></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Sprockets support for EJS:
<fo:basic-link external-destination="url(https://github.com/sstephenson/sprockets/blob/master/lib/sprockets/ejs_template.rb)">https://github.com/sstephenson/sprockets/blob/master/lib/sprockets/ejs_template.rb</fo:basic-link></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To make the <fo:inline font-size="10pt" font-family="monospace">*.jst</fo:inline> files available and create the <fo:inline font-size="10pt" font-family="monospace">window.JST</fo:inline> object, require
them in your application.js Sprockets manifest:</fo:block><fo:block id="id481371" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">//  other application requires
//= require_tree ../templates
//= require_tree .</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Additionally, load order for Backbone.js and your Backbone.js app is very
important. jQuery and Underscore.js must be loaded before Backbone.js, then
the Rails authenticity token patch must be applied. Then your models must be
loaded before your collections (because your collections will reference your
models) and then your routers and views must be loaded.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Fortunately, sprockets can handle this load order for us. When all is said and
done your application.js Sprockets manifest will be as shown below.</fo:block><fo:block id="id481392" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">//= require jquery
//= require jquery_ujs
//
//= require underscore
//= require backbone
//= require backbone.authtokenadapter
//
//= require example_app
//
//= require_tree ./models
//= require_tree ./collections
//= require_tree ./views
//= require_tree ./routers
//= require_tree ../templates
//= require_tree .</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The above is taken from the example application included with this book. You
can view it at example_app/app/assets/javascripts/application.js.</fo:block></fo:block><fo:block id="_an_overview_of_the_stack_connecting_rails_and_backbone_js"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">An Overview of the Stack: Connecting Rails and Backbone.js</fo:marker><fo:block font-size="20.736pt">5.4. An Overview of the Stack: Connecting Rails and Backbone.js</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">By default Backbone.js communicates with your Rails application via JSON gets
and posts. If you’ve ever made a JSON API for your Rails app, then for the most
part this will be very similar.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If you haven’t ever made a JSON API for your Rails application before, lucky
you, it’s pretty straightforward.</fo:block><fo:block id="_setting_up_rails_models"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">5.4.1. Setting Up Rails Models</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">One important aspect to keep in mind as you plan out how your Backbone.js
interface will behave, and how it will use your Rails back-end is that there is
no need to have a one-to-one mapping between your Rails models and your
Backbone.js models.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The smaller an application is, the more likely that there will be a one-to-one
mapping between both Backbone.js and Rails models and controllers.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">However, if you have a sufficiently complex application, its more likely that
you <fo:inline font-style="italic">won’t</fo:inline> have a one-to-one mapping due to the differences in the tools
Backbone.js gives you and the fact that you’re building a user-interface, not a
back-end. Some of the reasons why you won’t have a one to one mapping include:</fo:block><fo:list-block id="id481449" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="id481480" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
Because you’re building a user interface, not a back-end, it’s likely that
some of your backbone models will aggregate information from multiple Rails
models into one Backbone.js model.
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id481492" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
This Backbone.js model may or may not be named the same as one of your Rails
models.
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id481500" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
Backbone.js gives you a new type of object not present in Rails:
Collections.
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id481509" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
Backbone.js doesn’t have the concept of relationships out of the box.
</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">With that said, lets take the simple case first and look at how you might make a
Backbone.js version of a Rails model.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In our example application, we have a Task model. The simplest Backbone.js
representation of this model would be as shown below.</fo:block><fo:block id="id481536" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var Task = Backbone.Model.extend({
  urlRoot: '/tasks'
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The urlRoot property above indicates to Backbone.js that the server url for
instances of this model will be found at /tasks/:id.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In Rails, it’s possible to access individual Tasks, as well as all Tasks (and
query all tasks) through the same Task model. However, in Backbone.js models
only represent the singular representation of a Task. Backbone.js splits out the
plural representation of Tasks into what it calls Collections.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The simplest Backbone.js collection to represent our Tasks would be the
following.</fo:block><fo:block id="id481558" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var Tasks = Backbone.Collection.extend({
  model: Task
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If we specify the url for Tasks in our collection instead, then models within
the collection will use the collection’s url to construct their own urls, and
the urlRoot no longer needs to be specified in the model. If we make that
change, then our collection and models will be as follows.</fo:block><fo:block id="id481582" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var Tasks = Backbone.Collection.extend({
  model: Task,
  url: '/tasks'
});

var Task = Backbone.Model.extend({});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Notice in the above model definitions that there is no specification of the
attributes on the model. Like ActiveRecord, Backbone.js models get their
attributes from the schema and data given to them. In the case of Backbone.js,
this schema and data are the JSON from the server.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The default JSON representation of an ActiveRecord model is a Hash that includes
all the model’s attributes. It does not include the data for any related models
or any methods on the model, but it does include the ids of any related models
as those are stored in a <fo:inline font-size="10pt" font-family="monospace">relation_name_id</fo:inline> attribute on the model.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JSON representation of your ActiveRecord models will be retrieved by calling
<fo:inline font-size="10pt" font-family="monospace">to_json</fo:inline> on them. You customize the output of <fo:inline font-size="10pt" font-family="monospace">to_json</fo:inline> by overriding the
<fo:inline font-size="10pt" font-family="monospace">as_json</fo:inline> method in your model.  We’ll touch on this more later in the
section "Customizing your Rails-generated JSON."</fo:block></fo:block><fo:block id="_setting_up_rails_controllers"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">5.4.2. Setting Up Rails Controllers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The Backbone models and collections will talk to your Rails controllers. While
your models may not have a one-to-one mapping with their Rails counterparts, it
is likely that you’ll have at least one controller corresponding to every
Backbone.js model.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Fortunately for us, Backbone.js models will communicate in the normal RESTful
way that Rails controllers understand, using the proper verbs to support the
standard RESTful Rails controller actions: index, show, create, update, and
destroy. Backbone.js does not make any use the new action.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Therefore, it’s just up to us to write a <fo:inline font-style="italic">normal</fo:inline> restful controller.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">There are a few different ways you can write your controllers for interacting
with you Backbone.js models and collections. However, the newest and cleanest
way is to use the respond_with method introduced in Rails 3.0.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">When using respond_with, in your controller you specify what formats are
supported with the method respond_to. In your individual actions, you then
specify the resource or resources to be delivered using respond_with, as shown
in the example Tasks controller and index action below.</fo:block><fo:block id="id481689" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">class TasksController &lt; ApplicationController::Base
  respond_to :html, :json

  def index
    respond_with(@tasks = Task.all)
  end
end</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In the above example Tasks controller, the respond_to line declares that this
controller should respond to both the HTML and JSON formats. Then, in the
index action, the respond_with call will perform the appropriate action for
the requested format.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The above controller is equivalent to the following one, using the older
respond_to method.</fo:block><fo:block id="id481715" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">class TasksController &lt; ApplicationController::Base
  def index
    @tasks = Task.all
    respond_to do |format|
      format.html
      format.json { render :json =&gt; @tasks }
    end
  end
end</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Using respond_with you can create succinct controllers that respond with a
normal web page, but also expose a JSON api that Backbone.js will use.</fo:block><fo:block id="_validations_and_your_http_api"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.4pt">5.4.2.1. Validations and your HTTP API</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If a Backbone.js model has a <fo:inline font-size="10pt" font-family="monospace">validate</fo:inline> method defined, it will be validated
before its attributes are set. If validation fails, no changes to the model will
occur, and the "error" event will be fired. Your <fo:inline font-size="10pt" font-family="monospace">validate</fo:inline> method will be passed
the attributes that are about to be updated. You can signal that validation
passed by returning nothing from your <fo:inline font-size="10pt" font-family="monospace">validate</fo:inline> method. You can signify that
validation has failed by returning something from the method. What you return
can be as simple as a string, or a more complex object that describes the error
in all its gory detail.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In practice, much of the validation logic for your models will continue to be
handled on the server, as fully implementing validations on the client side
would often require duplicating a lot of server-side business logic.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">TODO: Is it possible to smoothly integrate Backbone.js and the
client_side_validations gem?</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Instead, your Backbone.js applications will likely rely on server-side
validation logic. How to handle a failure scenario is passed in to Backbone.js
model save call as a callback, as shown below.</fo:block><fo:block id="id481799" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">task.save({title: "New Task title"}, {
  error: function(){
    // handle error from server
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The error callback will be triggered if your server returns a non-200
response. Therefore, you’ll want your controller to return a non-200 HTTP
response code if validations fail.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">A controller that does this would be as shown in the following example.</fo:block><fo:block id="id481821" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">class TasksController &lt; ApplicationController::Base
  respond_to :json

  def create
    @task = Task.new(params[:task])
    if @task.save
      respond_with(@task)
    else
      respond_with(@task, :status =&gt; :unprocessable_entity)
    end
  end
end</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Your error callback will receive both the model as it was attempted to be
saved and the response from the server. You can take that response and handle
the errors returned by the above controller in whatever way is fit for your
application. For more information about handling and displaying errors, see
the Form helpers section of the Views and Templates chapter.</fo:block></fo:block></fo:block><fo:block id="_setting_up_views"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">5.4.3. Setting Up Views</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Most Backbone.js applications will be a "single-page app". This means that
your Rails application will render a single-page which properly sets up
Backbone.js and the data it will use. From there, ongoing interaction with
your Rails application occurs via the JSON apis.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The most common page for this single-page application will be the index action
of a controller, as in our example application and the tasks controller.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">You will want to create an object in Javascript for your Backbone.js application
to reside. For more information on this namespacing see the "Namespacing your
application" section of the Organization chapter.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">This namespace variable holds your Backbone.js application’s Models,
Collections, Views, and Routes, and has an init method which will be called to
initialize the application.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">This namespace variable will look like the following.</fo:block><fo:block id="id481884" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var ExampleApp = {
  Models: {},
  Collections: {},
  Views: {},
  Routers: {},
  init: function() {
    new ExampleApp.Routers.Tasks();
    Backbone.history.start();
  }
};</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">You can find this file in the example app in
<fo:inline font-size="10pt" font-family="monospace">app/assets/javascripts/example_app.js</fo:inline>.</fo:block><fo:block id="id481908" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in"><fo:block keep-with-next.within-column="always" font-size="14pt" font-weight="bold" hyphenate="false">Important</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">You must instantiate a Backbone.js router before calling
Backbone.history.start() otherwise Backbone.history will be undefined.</fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Then, inside app/views/tasks/index.html.erb you will call the initialize
method. This will appear as follows.</fo:block><fo:block id="id481925" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;%= content_for :javascript do -%&gt;
  &lt;%= javascript_tag do %&gt;
    ExampleApp.init();
  &lt;% end %&gt;
&lt;% end -%&gt;</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">For performance reasons, you will almost always "prime the pump" and give
Backbone.js its initial data within the HTML view for this page. In our
example, the tasks have already been provided to the view in a @tasks instance
variable, and that can be used to prime the pump, as shown below.</fo:block><fo:block id="id481945" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;%= content_for :javascript do -%&gt;
  &lt;%= javascript_tag do %&gt;
    ExampleApp.init(&lt;%== @tasks.to_json %&gt;);
  &lt;% end %&gt;
&lt;% end -%&gt;</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The above example uses Erb to pass the JSON for the tasks to the init method.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Once you make this change, the ExampleApp.init method then becomes:</fo:block><fo:block id="id481965" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var ExampleApp = {
  Models: {},
  Collections: {},
  Views: {},
  Routers: {},
  init: function(tasks) {
    new ExampleApp.Routers.Tasks();
    this.tasks = new ExampleApp.Collections.Tasks(tasks);
    Backbone.history.start();
  }
};</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Finally, you must have a Router in place which knows what to do. We’ll cover
routers in more detail in the Views and Templates chapter. For a more in-depth
presentation on writing and using routes please go there. However, routers are
an important part of the infrastructure you need to start using Backbone.js
and we can’t make our example here work without them.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Backbone.js routers provide methods for routing application flow based on
client-side URL fragments (#fragment).</fo:block><fo:block id="id481987" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">ExampleApp.Routers.Tasks = Backbone.Router.extend({
  routes: {
    "": "index"
  },

  index: function() {
    // We've reached the end of Rails integration - it's all Backbone from here!

    alert('Hello, world!  This is a Backbone.js router action.');

    // Normally you would continue down the stack, instantiating a
    // Backbone.View class, calling render() on it, and inserting its element
    // into the DOM.
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">A basic router consists of a routes hash which is a mapping between url
fragments and methods on the router. If the current URL fragment, or one that
is being visited matches one of the routes in the hash, its method will be
called.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The example router above is all that is needed to complete our Backbone.js
infrastructure. When a user visits <fo:inline font-size="10pt" font-family="monospace">/tasks</fo:inline> the index.html.erb view will be
rendered which properly initialized Backbone.js and its dependencies and the
Backbone.js models, collections, routers, and views.</fo:block><fo:block id="id482033" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in"><fo:block keep-with-next.within-column="always" font-size="14pt" font-weight="bold" hyphenate="false">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Backbone.js now includes support for pushState, which can use real, full URLs
instead of url fragments for routing.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">However, pushState support in Backbone.js is fully opt-in due to lack of
browser support and that additional server-side work is required to support it.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">pushState support is current limited to the latest versions of Firefox,
Chrome, and Safari and Mobile Safari. For a full listing of support and more
information about the History API, of which pushState is a part, visit
<fo:basic-link external-destination="url(http://diveintohtml5.org/history.html#how)">http://diveintohtml5.org/history.html#how</fo:basic-link></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Thankfully, if you opt-in to pushState in Backbone.js, browsers that don’t
support pushState will continue to use hash-based URL fragments, and if a hash
URL is visited by a pushState-capable browser, it will be transparently
upgraded to the true URL.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In addition to browser support, another hurdle to seamless use of pushState is
that because the URL used are real URLs, your server must now how to render
each of the urls. For example, if your Backbone.js application has a route of
/tasks/1, your server-side application must be able to respond to that page if
the browser visits that URL directly.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">For most applications, you can handle this by just rendering the content you
would have for the root URL and letting Backbone.js handle the rest of the
routing to the proper location. But for full search-engine crawlability, your
server-side application will need to render the entire HTML of the requested page.</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_customizing_your_rails_generated_json"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Customizing your Rails-generated JSON</fo:marker><fo:block font-size="20.736pt">5.5. Customizing your Rails-generated JSON</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">There are a few common things you’ll do in your Rails app when working with
Backbone.js.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">First, it’s likely that you’ll want to switch from including all attributes (the
default) to delivering some subset.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">This can be done by specifying explicitly only the attributes that are to be
included (whitelisting), or specifying the attributes that should <fo:inline font-style="italic">not</fo:inline> be
included (blacklisting). Which one you choose will depend on how many attributes
your model has and how paranoid you are about something important appearing in
the JSON when it shouldn’t be there.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If you’re concerned about sensitive data unintentionally being included in the
JSON when it shouldn’t be then you’ll want to whitelist, to switch to everything
being explicitly included in the JSON with the <fo:inline font-size="10pt" font-family="monospace">:only</fo:inline> option:</fo:block><fo:block id="id482148" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">def as_json(options = {})
  super(options.merge(:only =&gt; [ :id, :title ]))
end</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The above <fo:inline font-size="10pt" font-family="monospace">as_json</fo:inline> override will make it so that the JSON will <fo:inline font-style="italic">only</fo:inline> include the
id and title attributes, even if there are many other attributes on the model.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If instead you want to include all attributes by default and just exclude a few,
you accomplish this with the <fo:inline font-size="10pt" font-family="monospace">:except</fo:inline> option:</fo:block><fo:block id="id482184" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">def as_json(options = {})
  super(options.merge(:except =&gt; [ :encrypted_password ]))
end</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Another common customization you will want to do in the JSON is include the
output of methods (say, calculated values) on your model. This is accomplished
with the <fo:inline font-size="10pt" font-family="monospace">:methods</fo:inline> option, as shown in the following example.</fo:block><fo:block id="id482210" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">def as_json(options = {})
  super(options.merge(:methods =&gt; [ :calculated_value ]))
end</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The final thing you’ll most commonly do with your JSON is include related
objects. If the <fo:inline font-size="10pt" font-family="monospace">Task</fo:inline> model <fo:inline font-size="10pt" font-family="monospace">has_many :comments</fo:inline>, include all of the JSON for
comments in the JSON for a Task with the <fo:inline font-size="10pt" font-family="monospace">:include</fo:inline> option:</fo:block><fo:block id="id482244" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">def as_json(options = {})
  super(options.merge(:include =&gt; [ :comments ]))
end</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">As you probably suspect, you can then customize the JSON for the comments by
overriding the <fo:inline font-size="10pt" font-family="monospace">as_json</fo:inline> method on the <fo:inline font-size="10pt" font-family="monospace">Comment</fo:inline> model.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">While these are the most common <fo:inline font-size="10pt" font-family="monospace">as_json</fo:inline> options you’ll use when working with
Backbone.js, it certainly isn’t all of them. The official, complete,
documentation for the <fo:inline font-size="10pt" font-family="monospace">as_json</fo:inline> method can be found here:
<fo:basic-link external-destination="url(http://apidock.com/rails/ActiveModel/Serializers/JSON/as_json)">http://apidock.com/rails/ActiveModel/Serializers/JSON/as_json</fo:basic-link></fo:block><fo:block id="_activerecord_base_include_root_in_json"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">5.5.1. ActiveRecord::Base.include_root_in_json</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Depending on the versions, Backbone.js and Rails may have different expectations
about the format of JSON structures; specifically, whether or not a root key is
present.  When generating JSON from Rails, this is controlled by the
ActiveRecord setting <fo:inline font-size="10pt" font-family="monospace">ActiveRecord::Base.include_root_in_json</fo:inline>.</fo:block><fo:block id="id482323" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">  &gt; ActiveRecord::Base.include_root_in_json = false
  &gt; Task.last.as_json
 =&gt; {"id"=&gt;4, "title"=&gt;"Enjoy a three mile swim"}

  &gt; ActiveRecord::Base.include_root_in_json = true
  &gt; Task.last.as_json
 =&gt; {"task"=&gt;{"id"=&gt;4, "title"=&gt;"Enjoy a three mile swim"}}</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In Rails 3.0, <fo:inline font-size="10pt" font-family="monospace">ActiveRecord::Base.include_root_in_json</fo:inline> is set to true. In 3.1,
it defaults to false. This reversal was made to simplify the JSON returned by
default in Rails application, but it is fairly big change from the default
behavior of Rails 3.0.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Practically speaking, this change is a good one, but take particular note if
you’re upgrading an existing Rails 3.0 application to Rails 3.1 and you already
have a published API; you may need to expose a new version of your API.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">From the Backbone.js side, the default behavior expects no root node.  This
behavior is defined in a few places: <fo:inline font-size="10pt" font-family="monospace">Backbone.Collection.prototype.parse</fo:inline>,
<fo:inline font-size="10pt" font-family="monospace">Backbone.Model.prototype.parse</fo:inline>, and <fo:inline font-size="10pt" font-family="monospace">Backbone.Model.prototype.toJSON</fo:inline>:</fo:block><fo:block id="id482384" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">_.extend(Backbone.Collection.prototype, Backbone.Events, {
  // http://documentcloud.github.com/backbone/#Collection-parse
  parse : function(resp, xhr) {
    return resp;
  },

  // snip...
});

_.extend(Backbone.Model.prototype, Backbone.Events, {
  // http://documentcloud.github.com/backbone/#Model-toJSON
  toJSON : function() {
    return _.clone(this.attributes);
  },

  // http://documentcloud.github.com/backbone/#Model-parse
  parse : function(resp, xhr) {
    return resp;
  },

  // snip...
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If you need to accept JSON with a root node, you can override <fo:inline font-size="10pt" font-family="monospace">parse</fo:inline> in each of
your models, or override the prototype’s function.  You’ll need to override it
on the appropriate collection(s), too.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If you need to send JSON back to the server that includes a root node, you can
override <fo:inline font-size="10pt" font-family="monospace">toJSON</fo:inline>, per-model or across all models.  When you do this, you’ll
need to explicitly specify the name of the root key.  We use a convention of a
<fo:inline font-size="10pt" font-family="monospace">modelName</fo:inline> function on your model to provide this:</fo:block><fo:block id="id482433" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">Backbone.Model.prototype.toJSON = function() {
  var hashWithRoot = {};
  hashWithRoot[this.modelName] = this.attributes;
  return _.clone(hashWithRoot);
};

var Task = Backbone.Model.extend({
  modelName: "task",

  // ...
});</fo:block></fo:block></fo:block><fo:block id="_converting_an_existing_page_view_area_to_use_backbone_js"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Converting an existing page/view area to use Backbone.js</fo:marker><fo:block font-size="20.736pt">5.6. Converting an existing page/view area to use Backbone.js</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">We’ll cover Backbone.js Views and Templates in more detail in the Routers,
Views, and Templates chapter, but this section is meant to get you started
understanding how Backbone.js views work by illustrating the conversion of a
Rails view to a Backbone.js view.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Its important to note that a Rails view is not directly analogous to a
Backbone.js view. A Rails view is more like a Backbone.js template, and
Backbone.js views are more like Rails controllers. This can cause confusion
with developers just started with Backbone.js.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Consider the following Rails view for a tasks index.</fo:block><fo:block id="id482484" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;h1&gt;Tasks&lt;/h1&gt;

&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;Title&lt;/th&gt;
    &lt;th&gt;Completed&lt;/th&gt;
  &lt;/tr&gt;

  &lt;% @tasks.each do |task| %&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;%= task.title %&gt;&lt;/td&gt;
      &lt;td&gt;&lt;%= task.completed %&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;% end %&gt;
&lt;/table&gt;</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Assuming we have the Backbone.js Task model and collection and the Rails Task
model and controller discussed above, and we’re priming the pump with
all the tasks, before we can convert the template we must create a Backbone.js
view which will render the Backbone.js template.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">A Backbone.js view is a class that is responsible for rendering the display of
a logical element on the page. A view can also bind to events which may cause
it to be re-rendered. For more detailed coverage of Bakcbone.js views, see the
Routers, Views, and Templates chapter.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The most rudimentary view we could introduce at this point would be one that
merely renders the above page markup, looping over each task in the Tasks
collection. While this would be insufficient for most actual applications, in
order to illustrate the building blocks of a Backbone.js view, such a view
would be like the one shown below.</fo:block><fo:block id="id482511" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">ExampleApp.Views.TasksIndex = Backbone.View.extend({
  initialize: function() {
    this.render();
  },

  render: function () {
    $(this.el).html(JST['tasks/index']({ tasks: ExampleApp.tasks }));
    $('body').html(this.el);

    return this;
  }
};</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The Backbone.js view above has an initialize method which will be called when
the view is instantiated. This initialize method calls the render method of
the view. It’s not necessary to immediately render upon initialization, but
it’s fairly common to do so.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The render method above then renders the <fo:inline font-style="italic">tasks/index</fo:inline> template, passing
the collection of tasks into the template. It then sets the HTML of the body
element of the page to be the rendered template.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Each Backbone.js view has an element which is stories in this.el. This element
can be populated with content, but isn’t on the page until placed there by
you.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Finally, the Router must be changed to instantiate this view, as shown in the
follow Tasks router.</fo:block><fo:block id="id482554" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">ExampleApp.Routers.Tasks = Backbone.Router.extend({
  routes: {
    "": "index"
  },

  index: function() {
    new ExampleApp.Views.TasksIndex();
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Now that we have the Backbone.js view in place that renders the template, and
its being called by the router, we can focus on converting the above Rails
view to a Backbone.js template.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Backbone.js depends on Underscore.js which provides templating. Fortunately,
the delimiter and basic concepts used for both Underscore.js and Erb are the
same, making conversion relatively painless. For this reason, we recommend
using Underscore.js templates when converting a larger, existing Rails
application to Backbone.js.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The tasks index template does two things:</fo:block><fo:list-block id="id482586" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="id482588" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
Loops over all of the tasks
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id482594" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
For each task, it outputs the task title and completed attributes
</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Underscore.js provides many iteration functions that will be familiar to Rails
developers. For example, each, map, and reject. Fortunately, Backbone.js also
proxies to Underscore.js to provide 26 iteration functions on
Backbone.Collection. This means that its possible to call the Underscore.js
methods directly on Backbone.js collections.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">So we’ll use the each method to iterate through the Tasks collection that was
passed to the view, as shown in the converted Rails template, which is now an
Underscore.js template, below.</fo:block><fo:block id="id482611" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;h1&gt;Tasks&lt;/h1&gt;

&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;Title&lt;/th&gt;
    &lt;th&gt;Completed&lt;/th&gt;
  &lt;/tr&gt;

  &lt;% tasks.each(function(model) { %&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;%= model.escape('title') %&gt;&lt;/td&gt;
      &lt;td&gt;&lt;%= model.escape('completed') %&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;% }); %&gt;
&lt;/table&gt;</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">As you can see above in the above example, the same delimiter, and the use of
the each method make the conversion of the Rails view to an Underscore.js
template straightforward.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Finally, in Rails 3.0 and above template output is escaped. In order to ensure
that we have the same XSS protection as we did in our Rails template, we
access and output the Backbone.js model attributes using the escape method
instead of the normal get method.</fo:block><fo:block id="_breaking_out_the_taskview"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">5.6.1. Breaking out the TaskView</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">As mentioned above, this simple conversion of the index which merely loops
over each of the tasks is not one you’d likely see in a real Backbone.js
application.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Backbone.js views should represent the logic pieces of your web page. In the
above example, we have an index view, which is a logic piece, but then it is
made up of the display of individual tasks. Each of those individual tasks
should be represented by a new Backbone.js view, named TaskView.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The benefit of this logical separation is covered in more detail in the
Views section, but know that one of the major features of Backbone.js is event
binding. With each of the Task models represented by an individual task view,
when that individual model changes the view can be re-rendered automatically
(by triggering events) and the entire page doesn’t need to be re-rendered.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Continuing our task index example from above, a TaskView will be responsible
for rendering just the individual table row for a Task, therefore, its
template will appear as follows.</fo:block><fo:block id="id482689" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;tr&gt;
  &lt;td&gt;&lt;%= model.escape('title') %&gt;&lt;/td&gt;
  &lt;td&gt;&lt;%= model.escape('completed') %&gt;&lt;/td&gt;
&lt;/tr&gt;</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">And the Task index template will be changed to be as shown below.</fo:block><fo:block id="id482705" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;h1&gt;Tasks&lt;/h1&gt;

&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;Title&lt;/th&gt;
    &lt;th&gt;Completed&lt;/th&gt;
  &lt;/tr&gt;

&lt;/table&gt;</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">As you can see above in the index template, the individual tasks are no longer
iterated over and rendered inside the table. This will now happen in the
TasksIndex and TaskView view, which is shown below.</fo:block><fo:block id="id482725" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">ExampleApp.Views.TaskView = Backbone.View.extend({
  initialize: function() {
  },

  render: function () {
    $(this.el).html(JST['tasks/view']({ model: this.model }));
    return this;
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The TaskView view above is very similar to the one we saw previously for the
TasksIndex view. However, unlike the TasksIndex view, the TaskView does not
insert itself into the dom. Instead, it only inserts its content into it’s own
element and the TasksIndex view be responsible for inserting the rendered task
into the dom, as shown below.</fo:block><fo:block id="id482734" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">ExampleApp.Views.TasksIndex = Backbone.View.extend({
  initialize: function() {
    this.render();
  },

  render: function () {
    $(this.el).html(JST['tasks/index']({ tasks: ExampleApp.tasks }));

    var tasksIndexView = this;
    ExampleApp.tasks.each(function(task) {
      var taskView = new ExampleApp.Views.TaskView({model: task});
      tasksIndexView.$('table').append(taskView.render().el);
    });

    $('body').html(this.el);

    return this;
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In the new TasksIndex view above, the Tasks collection is iterated over. For
each task, a new TaskView is instantiated, rendered, and then inserted into
the dom.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If you take a look at the output of the TasksIndex, it will appear as follows.</fo:block><fo:block id="id482760" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;div&gt;
  &lt;h1&gt;Tasks&lt;/h1&gt;

  &lt;table&gt;
    &lt;tr&gt;
      &lt;th&gt;Title&lt;/th&gt;
      &lt;th&gt;Completed&lt;/th&gt;
    &lt;/tr&gt;

    &lt;div&gt;
      &lt;tr&gt;
        &lt;td&gt;Task 1&lt;/td&gt;
        &lt;td&gt;true&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;tr&gt;
        &lt;td&gt;Task 2&lt;/td&gt;
        &lt;td&gt;false&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/div&gt;
  &lt;/table&gt;
&lt;/div&gt;</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Unfortunately, we can see that there is a problem with the above rendered
view, and that is the surrounding div around each of the rendered tasks.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Each of the rendered tasks has a surrounding div because this is the element
that each view has that is accessed via this.el, and what the view’s content
is inserted into. By default, this element is a div and therefore every view
will be wrapped in an extra div. While sometimes this extra div doesn’t really
matter, as in the outermost div that wraps the entire index, other times this
produced invalid markup.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Fortunately, Backbone.js provides us with a clean and simple mechanism for
changing the element to something other than a div. In the case of the
TaskView, we would like this element to be a tr, then the wrapping tr can be
removed from the task view template.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The element to use is specified by the tagName member of the TaskView, as
shown below.</fo:block><fo:block id="id482795" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">ExampleApp.Views.TaskView = Backbone.View.extend({
  tagName: "tr",

  initialize: function() {
  },

  render: function () {
    $(this.el).html(JST['tasks/view']({ model: this.model }));
    return this;
  }
};</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Given the above tagName customization, the task view template will be as
follows.</fo:block><fo:block id="id482805" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;td&gt;&lt;%= model.escape('title') %&gt;&lt;/td&gt;
&lt;td&gt;&lt;%= model.escape('completed') %&gt;&lt;/td&gt;</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">And the resulting output of the TasksIndex will be much cleaner, as shown
below.</fo:block><fo:block id="id482829" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;div&gt;
  &lt;h1&gt;Tasks&lt;/h1&gt;

  &lt;table&gt;
    &lt;tr&gt;
      &lt;th&gt;Title&lt;/th&gt;
      &lt;th&gt;Completed&lt;/th&gt;
    &lt;/tr&gt;

    &lt;tr&gt;
      &lt;td&gt;Task 1&lt;/td&gt;
      &lt;td&gt;true&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Task 2&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">That is the basic building blocks of converting Rails views to Backbone.js and
getting a functional system. The majority of Backbone.js programming you will
do will likely be in the Views and Templates and there is a lot more too them:
event binding, different templating strategies, helpers, event unbinding, and
more. All of which are covered in the Routers, Views, and Templates chapter.</fo:block></fo:block></fo:block><fo:block id="_automatically_using_the_rails_authentication_token"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Automatically using the Rails authentication token</fo:marker><fo:block font-size="20.736pt">5.7. Automatically using the Rails authentication token</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">When using Backbone.js in a Rails app, you will run into a conflict with the
Rails built in Cross Site Scripting (XSS) protection.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">When Rails XSS is enabled, each POST or PUT request to Rails should include a
special token which is verified to ensure that the request originated from a
user which is actually using the Rails app. In recent versions of Rails,
Backbone.js Ajax requests are no exception.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To get around this, you have two options. Disable Rails XSS protection (not
recommended), or make Backbone.js play nicely with Rails XSS.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To make Backbone.js play nicely with Rails XSS you can monkeypatch Backbone.js
to include the Rails XSS token in any requests it makes.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The following is one such script.</fo:block><fo:block id="id482895" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">//
// With additions by Maciej Adwent http://github.com/Maciek416
// If token name and value are not supplied, this code Requires jQuery
//
// Adapted from:
// http://www.ngauthier.com/2011/02/backbone-and-rails-forgery-protection.html
// Nick Gauthier @ngauthier
//

var BackboneRailsAuthTokenAdapter = {

  //
  // Given an instance of Backbone, route its sync() function so that
  // it executes through this one first, which mixes in the CSRF
  // authenticity token that Rails 3 needs to protect requests from
  // forgery. Optionally, the token's name and value can be supplied
  // by the caller.
  //
  fixSync: function(Backbone, paramName /*optional*/, paramValue /*optional*/){

    if(typeof(paramName)=='string' &amp;&amp; typeof(paramValue)=='string'){
      // Use paramName and paramValue as supplied
    } else {
      // Assume we've rendered meta tags with erb
      paramName = $("meta[name='csrf-param']").attr('content');
      paramValue = $("meta[name='csrf-token']").attr('content');
    }

    // alias away the sync method
    Backbone._sync = Backbone.sync;

    // define a new sync method
    Backbone.sync = function(method, model, success, error) {

      // only need a token for non-get requests
      if (method == 'create' || method == 'update' || method == 'delete') {

        // grab the token from the meta tag rails embeds
        var auth_options = {};
        auth_options[paramName] = paramValue;

        // set it as a model attribute without triggering events
        model.set(auth_options, {silent: true});
      }

      // proxy the call to the old sync method
      return Backbone._sync(method, model, success, error);
    };
  },


  // change Backbone's sync function back to the original one
  restoreSync: function(Backbone){
    Backbone.sync = Backbone._sync;
  }
};

BackboneRailsAuthTokenAdapter.fixSync(Backbone);</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The above patch depends on jQuery, and should be included in your after jQuery
and Backbone.js are loaded. Using Jammit, you’d list it below the backbone.js
file.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In Rails 3.1, you’ll place this file in lib/assets/javascripts. In the example
app, you can find this this in
example_app/lib/assets/javascripts/backbone.authtokenadapter.js.</fo:block></fo:block></fo:block><fo:block id="_routers_views_and_templates"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Routers, Views, and Templates</fo:marker><fo:block font-size="24.8832pt">6. Routers, Views, and Templates</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_view_explanation_chapter_unstarted"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">View explanation (chapter unstarted)</fo:marker><fo:block font-size="20.736pt">6.1. View explanation (chapter unstarted)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_routers_chapter_unstarted"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Routers (chapter unstarted)</fo:marker><fo:block font-size="20.736pt">6.2. Routers (chapter unstarted)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_templating_strategy_chapter_unstarted"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Templating strategy (chapter unstarted)</fo:marker><fo:block font-size="20.736pt">6.3. Templating strategy (chapter unstarted)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_view_helpers_chapter_unstarted"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">View helpers (chapter unstarted)</fo:marker><fo:block font-size="20.736pt">6.4. View helpers (chapter unstarted)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_form_helpers_chapter_unstarted"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Form helpers (chapter unstarted)</fo:marker><fo:block font-size="20.736pt">6.5. Form helpers (chapter unstarted)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_event_binding"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Event binding</fo:marker><fo:block font-size="20.736pt">6.6. Event binding</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">A big part of writing snappy rich client applications is building models and
views that update in realtime with respect to one another.  With Backbone.js
you accomplish this with events.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">TODO: This is probably the first time we dive into events, unless we touch on
them earlier in the models/collections sections.  Might want to introduce the
topic with a basic example that uses <fo:inline font-size="10pt" font-family="monospace">Backbone.Events</fo:inline> without views &amp; models.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">There are three primary kinds of events that your views will bind to:</fo:block><fo:list-block id="id483009" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="id483012" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
DOM events within the view’s <fo:inline font-size="10pt" font-family="monospace">this.el</fo:inline> element
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id483024" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
Backbone events triggered by the view’s model or collection
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id483033" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
Custom view events
</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">TODO: This three-point breakdown is the wrong way to slice this.  Instead of
"DOM, model/collection, custom" it should be "DOM, events I observe, events I
publish".  Events that your view observes need to be cleaned up upon disposing
the view, regardless of where those events are triggered (models, collections,
or other views, or other arbitrary objects).  Events that your view publishes
need to be handled in a different way.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">TODO: Consider promoting events and binding/unbinding to its own top-level
section; this isn’t view-specific, although the view layer is where you’ll be
doing most of your binding.</fo:block><fo:block id="_binding_to_dom_events_within_the_view_element"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">6.6.1. Binding to DOM events within the view element</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The primary function of a view class is to provide behavior for its markup’s DOM elements.  You can attach event listeners by hand if you like:</fo:block><fo:block id="id483067" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;!-- templates/soundboard.jst --&gt;
&lt;a class="sound"&gt;Honk&lt;/a&gt;
&lt;a class="sound"&gt;Beep&lt;/a&gt;</fo:block><fo:block id="id483079" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var SoundBoard = Backbone.View.extend({
  render: function() {
    $(this.el).html(JST['soundboard']());
    this.$("a.sound").bind("click", this.playSound);
  },

  playSound: function() {
    // play sound for this element
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">But Backbone provides an easier and more declarative approach with the <fo:inline font-size="10pt" font-family="monospace">events</fo:inline> hash:</fo:block><fo:block id="id483104" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var SoundBoard = Backbone.View.extend({
  events: {
    "click a.sound": "playSound"
  },

  render: function() {
    $(this.el).html(JST['soundboard']());
  },

  playSound: function() {
    // play sound for this element
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Backbone will bind the events with the
<fo:basic-link external-destination="url(http://documentcloud.github.com/backbone/#View-delegateEvents)">Backbone.View.prototype.delegateEvents()</fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://documentcloud.github.com/backbone/#View-delegateEvents)">http://documentcloud.github.com/backbone/#View-delegateEvents</fo:basic-link>]</fo:inline>
function.  It binds DOM events with <fo:inline font-size="10pt" font-family="monospace">$.delegate()</fo:inline>, whether you’re using the
<fo:basic-link external-destination="url(http://api.jquery.com/delegate/)">jQuery</fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://api.jquery.com/delegate/)">http://api.jquery.com/delegate/</fo:basic-link>]</fo:inline> or
<fo:basic-link external-destination="url(https://github.com/madrobby/zepto/blob/v0.7/src/event.js#L96-108)">Zepto</fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/madrobby/zepto/blob/v0.7/src/event.js#L96-108)">https://github.com/madrobby/zepto/blob/v0.7/src/event.js#L96-108</fo:basic-link>]</fo:inline>
<fo:inline font-size="10pt" font-family="monospace">.delegate()</fo:inline> function.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">It also takes care of binding the event handlers' <fo:inline font-size="10pt" font-family="monospace">this</fo:inline> to the view instance using <fo:inline font-size="10pt" font-family="monospace">_.bind()</fo:inline>.</fo:block></fo:block><fo:block id="_binding_to_events_triggered_by_literal_this_model_literal_or_literal_this_collection_literal"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">6.6.2. Binding to events triggered by <fo:inline font-size="10pt" font-family="monospace">this.model</fo:inline> or <fo:inline font-size="10pt" font-family="monospace">this.collection</fo:inline></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In almost every view you write, the view will be bound to a <fo:inline font-size="10pt" font-family="monospace">Backbone.Model</fo:inline> or
<fo:inline font-size="10pt" font-family="monospace">Backbone.Collection</fo:inline>, most often with the convenience properties <fo:inline font-size="10pt" font-family="monospace">this.model</fo:inline>
or <fo:inline font-size="10pt" font-family="monospace">this.collection</fo:inline>.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">TODO: Make sure we discussed the convenience properties previously?</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Consider a view that displays a collection of <fo:inline font-size="10pt" font-family="monospace">Task</fo:inline> models.  It will re-render
itself when any model in the collection is changed or removed, or when a new
model is added:</fo:block><fo:block id="id483232" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var TasksIndex = Backbone.View.extend({
  template: JST['tasks/tasks_index'],
  tagName: 'section',
  id: 'tasks',

  initialize: function() {
    _.bindAll(this, "render");
    this.collection.bind("change", this.render);
    this.collection.bind("add",    this.render);
    this.collection.bind("remove", this.render);
  },

  render: function() {
    $(this.el).html(this.template({tasks: this.collection}));
  }
});</fo:block></fo:block><fo:block id="_binding_to_custom_events"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">6.6.3. Binding to custom events</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">With sufficiently complex views, you may encounter a situation where you want
one view to change in response to another.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">TODO: Expound on this situation, discuss that it’s unlikely, and you should
consider whether you should be binding to models instead.  However, sometimes
it’s useful.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Consider a simple example with a table of users and a toggle control that
filters the users to a particular gender:</fo:block><fo:block id="id483276" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">GenderFilter = Backbone.View.extend({
  events: {
    "click .show-male":   "showMale",
    "click .show-female": "showFemale",
    "click .show-both":   "showBoth"
  },

  showMale: function()   { this.trigger("changed", "male");   },
  showFemale: function() { this.trigger("changed", "female"); },
  showBoth: function()   { this.trigger("changed", "both");   }
});

UsersTable = Backbone.View.extend({
  initialize: function() {
    this.filterView = new UserFilter();
    this.filterView.bind("changed", this.filterByGender);
  },

  filterByGender: function(gender) {
    this.filteredCollection = this.collection.byGender(gender);
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:inline font-size="10pt" font-family="monospace">GenderFilter</fo:inline> is responsible for the filter control, and triggers an event
with <fo:inline font-size="10pt" font-family="monospace">Backbone.Events.prototype.trigger()</fo:inline> when it changes.  <fo:inline font-size="10pt" font-family="monospace">UsersTable</fo:inline>
observes this event, and filters its own collection in response.</fo:block></fo:block></fo:block><fo:block id="_cleaning_up_unbinding"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Cleaning Up: Unbinding</fo:marker><fo:block font-size="20.736pt">6.7. Cleaning Up: Unbinding</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In the last section, we discussed three different kinds of event binding in
your <fo:inline font-size="10pt" font-family="monospace">Backbone.Views</fo:inline> classes: DOM events, model/collection events, and custom
view events.  Next we’ll discuss unbinding these events: why it’s a good idea,
and how to do it.</fo:block><fo:block id="_why_do_i_have_to_unbind_events"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">6.7.1. Why do I have to unbind events?</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Consider two views in a Todo app: an index view which contains all the tasks
that need to be done:</fo:block><fo:block id="id483344" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always"><fo:block font-weight="bold" font-size="14.4pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" keep-with-next.within-column="always">Figure 2. Tasks index view</fo:block><fo:block id="id483350"><fo:external-graphic src="url(views_and_templates/tasks-index.png)" width="auto" height="auto" content-width="auto" content-height="auto"/></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">and a detail view that shows detail on one task:</fo:block><fo:block id="id483372" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always"><fo:block font-weight="bold" font-size="14.4pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" keep-with-next.within-column="always">Figure 3. Tasks detail view</fo:block><fo:block id="id483378"><fo:external-graphic src="url(views_and_templates/tasks-detail.png)" width="auto" height="auto" content-width="auto" content-height="auto"/></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The interface switches between the two views.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Here’s the source for the aggregate index view:</fo:block><fo:block id="id483404" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var TasksIndex = Backbone.View.extend({
  template: JST['tasks/tasks_index'],
  tagName: 'section',
  id: 'tasks',

  initialize: function() {
    _.bindAll(this, "render");
    this.collection.bind("change", this.render);
    this.collection.bind("add",    this.render);
    this.collection.bind("remove", this.render);
  },

  render: function() {
    $(this.el).html(this.template({tasks: this.collection}));
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">and the source for the individual task detail view:</fo:block><fo:block id="id483420" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var TaskDetail = Backbone.View.extend({
  template: JST['tasks/tasks_detail'],
  tagName: 'section',
  id: 'task',

  events: {
    "click .comments .form-inputs button": "createComment"
  },

  initialize: function() {
    _.bindAll(this, "render");

    this.model.bind("change", this.render);
    this.model.comments.bind("change", this.render);
    this.model.comments.bind("add", this.render);
  },

  render: function() {
    $(this.el).html(this.template({task: this.model}));
  },

  createComment: function() {
    var comment = new Comment({ text: this.$('.new-comment-input').val() });
    this.$('.new-comment-input').val('');
    this.model.comments.create(comment);
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Each task on the index page links to the detail view for itself. When a user
follows one of these links and navigates from the index page to the detail
page, then interacts with the detail view to change a model, the <fo:inline font-size="10pt" font-family="monospace">change</fo:inline> event
on the <fo:inline font-size="10pt" font-family="monospace">TaskApp.tasks</fo:inline> collection is fired. One consequence of this is that
the index view, which is still bound and observing the <fo:inline font-size="10pt" font-family="monospace">change</fo:inline> event, will
re-render itself.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">This is both a functional bug and a memory leak: not only will the index view
re-render and disrupt the detail display momentarily, but navigating back and
forth between the views without disposing of the previous view will keep
creating more views and binding more events on the associated models or
collections.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">These can be extremely tricky to track down on a production application,
especially if you are nesting child views. Sadly, there’s no "garbage
collection" for views in Backbone, so your application needs to manage this
itself.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Let’s take a look at how to unbind various kinds of events.</fo:block></fo:block><fo:block id="_unbinding_dom_events"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">6.7.2. Unbinding DOM events</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">When you call <fo:inline font-size="10pt" font-family="monospace">this.remove()</fo:inline> in your view, it delegates to <fo:inline font-size="10pt" font-family="monospace">jQuery.remove()</fo:inline>
by invoking <fo:inline font-size="10pt" font-family="monospace">$(this.el).remove()</fo:inline>.  This means that jQuery takes care of
cleaning up any events bound on DOM elements within your view, regardless of
whether you bound them with the Backbone <fo:inline font-size="10pt" font-family="monospace">events</fo:inline> hash or by hand; for
example, with <fo:inline font-size="10pt" font-family="monospace">$.bind()</fo:inline>, <fo:inline font-size="10pt" font-family="monospace">$.delegate()</fo:inline>, or <fo:inline font-size="10pt" font-family="monospace">$.live()</fo:inline>.</fo:block></fo:block><fo:block id="_unbinding_model_and_collection_events"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">6.7.3. Unbinding model and collection events</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If your view binds to events on a model or collection, you are responsible for
unbinding these events.  You do this with a simple call to
<fo:inline font-size="10pt" font-family="monospace">this.model.unbind()</fo:inline> or <fo:inline font-size="10pt" font-family="monospace">this.collection.unbind()</fo:inline>; the
<fo:basic-link external-destination="url(http://documentcloud.github.com/backbone/#Events-unbind)"><fo:inline font-size="10pt" font-family="monospace">Backbone.Events.unbind()</fo:inline>
function</fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://documentcloud.github.com/backbone/#Events-unbind)">http://documentcloud.github.com/backbone/#Events-unbind</fo:basic-link>]</fo:inline> removes all callbacks on that object.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">When should we unbind these handlers?  Whenever the view is going away.  This
means that any pieces of code that create new instances of this view become
responsible for cleaning up after it.  That doesn’t sound like a very cohesive
approach, so let’s include the cleanup responsibility on this view.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">TODO: Consider just overriding <fo:inline font-size="10pt" font-family="monospace">Backbone.View.prototype.remove()</fo:inline> instead of
making a new function, since <fo:inline font-size="10pt" font-family="monospace">remove()</fo:inline> is very simple.  What are the pros/cons?</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Let’s write a <fo:inline font-size="10pt" font-family="monospace">leave()</fo:inline> function on our view that wraps <fo:inline font-size="10pt" font-family="monospace">remove()</fo:inline> and handles
any additional event unbinding we need to do.  As a convention, when we use
this view elsewhere, we’ll call <fo:inline font-size="10pt" font-family="monospace">leave()</fo:inline> instead of <fo:inline font-size="10pt" font-family="monospace">remove()</fo:inline> when we’re
done:</fo:block><fo:block id="id483617" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var SomeCollectionView = Backbone.View.extend({
  // snip...

  initialize: function() {
    this.collection.bind("change", this.render);
  },

  leave: function() {
    this.collection.unbind("change", this.render);
    this.remove();
  }

  // snip...
});</fo:block></fo:block><fo:block id="_keep_track_of_literal_bind_literal_calls_to_unbind_more_easily"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">6.7.4. Keep track of <fo:inline font-size="10pt" font-family="monospace">bind()</fo:inline> calls to unbind more easily</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In the example above, unbinding the collection change event isn’t too much
hassle; since we’re only observing one thing, we only have to unbind one
thing.  But even the addition of one line to <fo:inline font-size="10pt" font-family="monospace">leave()</fo:inline> is easy to forget, and
if you bind to multiple events then it only gets more verbose.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Let’s add a step of indirection in event binding so that we can automatically
clean up all the events with one call.  We’ll add and use a <fo:inline font-size="10pt" font-family="monospace">bindTo()</fo:inline>
function that keeps track of all the event handlers we bind, and then issue a
single call to <fo:inline font-size="10pt" font-family="monospace">unbindFromAll()</fo:inline> to unbind them:</fo:block><fo:block id="id483680" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var SomeCollectionView = Backbone.View.extend({
  initialize: function() {
    this.bindTo(this.collection, "change", this.render);
  },

  leave: function() {
    this.unbindFromAll();
    this.remove();
  },

  bindTo: function(source, event, callback) {
    source.bind(event, callback, this);
    this.bindings.push({ source: source, event: event, callback: callback });
  },

  unbindFromAll: function() {
    _.each(this.bindings, function(binding) {
      binding.source.unbind(binding.event, binding.callback);
    });
    this.bindings = [];
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">These functions, <fo:inline font-size="10pt" font-family="monospace">bindTo()</fo:inline> and <fo:inline font-size="10pt" font-family="monospace">unbindFromAll()</fo:inline>, can be extracted into a
reusable mixin or superclass.  Then, we just have to use <fo:inline font-size="10pt" font-family="monospace">bindTo()</fo:inline> instead of
<fo:inline font-size="10pt" font-family="monospace">model.bind()</fo:inline> and be assured that the handlers will be cleaned up during
<fo:inline font-size="10pt" font-family="monospace">leave()</fo:inline>.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">TODO: Is it viable to use Function.caller inside Backbone.Events so this
functionality is provided by Backbone.Events?
<fo:basic-link external-destination="url(https://gist.github.com/158a4172aea28876d0fc)">https://gist.github.com/158a4172aea28876d0fc</fo:basic-link></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">TODO: Wrap <fo:inline font-size="10pt" font-family="monospace">bindTo()</fo:inline> and <fo:inline font-size="10pt" font-family="monospace">unbindFromAll()</fo:inline> into <fo:inline font-size="10pt" font-family="monospace">Observer</fo:inline> which gets mixed
into <fo:inline font-size="10pt" font-family="monospace">CompositeView</fo:inline>.</fo:block></fo:block><fo:block id="_unbinding_custom_events"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">6.7.5. Unbinding custom events</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">With the first two kinds of event binding that we discussed, DOM and
model/collection, the view is the observer.  The responsibility to clean up is
on the observer, and here the responsibility consists of unbinding the event
handler when the view is being removed.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">But other times, our view classes will trigger (emit) events of their own.
In this case, other objects are the observer, and are responsible for cleaning
up the event binding when they are disposed.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">However, additionally, when the view itself is disposed of with <fo:inline font-size="10pt" font-family="monospace">leave()</fo:inline>, it
should clean up any event handlers bound on <fo:inline font-weight="bold">itself</fo:inline> for events that it
triggers.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">This is handled by invoking <fo:inline font-size="10pt" font-family="monospace">Backbone.Events.unbind()</fo:inline>:</fo:block><fo:block id="id483809" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var FilteringView = Backbone.View.extend({
  // snip...

  events: {
    "click a.filter": "changeFilter"
  },

  changeFilter: function() {
    if (someLogic()) {
      this.trigger("filtered", { some: options });
    }
  },

  leave: function() {
    this.unbind(); // Clean up any event handlers bound on this view
    this.remove();
  }

  // snip...
});</fo:block></fo:block><fo:block id="_establish_a_convention_for_consistent_and_correct_unbinding"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">6.7.6. Establish a convention for consistent and correct unbinding</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">There’s no built-in garbage collection for Backbone’s event bindings, and
forgetting to unbind can cause bugs and memory leaks. The solution is to make
sure you unbind events and remove views when you leave them. Our approach to
this is two-fold: write a set of reusable functions that manage cleaning up a
view’s bindings, and use these functions where ever views are instantiated: in
<fo:inline font-size="10pt" font-family="monospace">Router</fo:inline> instances, and in composite views.  We’ll take a look at these
concrete, reusable approaches in the next two sections about <fo:inline font-size="10pt" font-family="monospace">SwappingRouter</fo:inline>
and <fo:inline font-size="10pt" font-family="monospace">CompositeView</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="_swapping_router"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Swapping router</fo:marker><fo:block font-size="20.736pt">6.8. Swapping router</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">When switching from one view to another, we should clean up the previous view.
We discussed previously a convention of writing a <fo:inline font-size="10pt" font-family="monospace">view.leave()</fo:inline>
Let’s augment our view to include the ability to clean itself up by "leaving"
the DOM:</fo:block><fo:block id="id483886" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var MyView = Backbone.View.extend({
  // ...

  leave: function() {
    this.unbind();
    this.remove();
  },

  // ...
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The <fo:inline font-size="10pt" font-family="monospace">unbind()</fo:inline> and <fo:inline font-size="10pt" font-family="monospace">remove()</fo:inline> functions are provided by <fo:inline font-size="10pt" font-family="monospace">Backbone.Events</fo:inline> and
<fo:inline font-size="10pt" font-family="monospace">Backbone.Events.unbind()</fo:inline> will remove all callbacks registered on the view,
and <fo:inline font-size="10pt" font-family="monospace">remove()</fo:inline> will remove the view’s element from the DOM.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In simple cases, we replace one full page view with another full page (less any
shared layout). We introduce a convention that all actions underneath one
<fo:inline font-size="10pt" font-family="monospace">Router</fo:inline> share the same root element, and define it as <fo:inline font-size="10pt" font-family="monospace">el</fo:inline> on the router.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Now, a <fo:inline font-size="10pt" font-family="monospace">SwappingRouter</fo:inline> can take advantage of the <fo:inline font-size="10pt" font-family="monospace">leave()</fo:inline> function, and clean
up any existing views before swapping to a new one.  It swaps into a new view by
rendering that view into its own <fo:inline font-size="10pt" font-family="monospace">el</fo:inline>:</fo:block><fo:block id="id483974" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">SwappingRouter = function(options) {
  Backbone.Router.apply(this, [options]);
};

_.extend(SwappingRouter.prototype, Backbone.Router.prototype, {
  swap: function(newView) {
    if (this.currentView &amp;&amp; this.currentView.leave) {
      this.currentView.leave();
    }

    this.currentView = newView;
    this.currentView.render();
    $(this.el).empty().append(this.currentView.el);
  }
});

SwappingRouter.extend = Backbone.Router.extend;</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Now all you need to do in a route function is call <fo:inline font-size="10pt" font-family="monospace">swap()</fo:inline>, passing in the
new view that should be rendered. The <fo:inline font-size="10pt" font-family="monospace">swap()</fo:inline> function’s job is to call
<fo:inline font-size="10pt" font-family="monospace">leave()</fo:inline> on the current view, render the new view and append it to the
router’s <fo:inline font-size="10pt" font-family="monospace">el</fo:inline>, and finally store who the current view is, so that next time
<fo:inline font-size="10pt" font-family="monospace">swap()</fo:inline> is invoked, it can be properly cleaned up as well.</fo:block><fo:block id="swapping-internals"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">6.8.1. SwappingRouter and Backbone internals</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If the code for <fo:inline font-size="10pt" font-family="monospace">SwappingRouter</fo:inline> seems a little confusing, don’t fret: it is,
thanks to JavaScript’s object model! Sadly, it’s not as simple to just drop in
the <fo:inline font-size="10pt" font-family="monospace">swap</fo:inline> method into <fo:inline font-size="10pt" font-family="monospace">Backbone.Router</fo:inline>, or call <fo:inline font-size="10pt" font-family="monospace">Backbone.Router.extend</fo:inline> to
mixin the function we need.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Our goal here is essentially to create a subclass of <fo:inline font-size="10pt" font-family="monospace">Backbone.Router</fo:inline>, and to
extend it without modifying the original class. This gives us a few benefits:
first, <fo:inline font-size="10pt" font-family="monospace">SwappingRouter</fo:inline> should work with Backbone upgrades. Second, it should be
<fo:inline font-weight="bold">obvious</fo:inline>  and <fo:inline font-weight="bold">intention-revealing</fo:inline> when a controller needs to swap views. If
we chose to just mix in a <fo:inline font-size="10pt" font-family="monospace">swap</fo:inline> method, and called it from a direct descendant
of <fo:inline font-size="10pt" font-family="monospace">Backbone.Router</fo:inline>, an unaware (and unlucky) programmer now needs to go on a
deep source dive in an attempt to figure out where that’s coming from. At least
with a subclass, the hunt should start at the file where it was defined.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The procedure used to create <fo:inline font-size="10pt" font-family="monospace">SwappingRouter</fo:inline> is onerous thanks to a mix of
Backbone-isms and just how clunky inheritance is in JavaScript. First off, we
need to define the constructor, which delegates to the <fo:inline font-size="10pt" font-family="monospace">Backbone.Router</fo:inline>
constructor with the use of <fo:inline font-size="10pt" font-family="monospace">Function#apply</fo:inline>. The next block of code uses
Underscore’s <fo:inline font-size="10pt" font-family="monospace">Object#extend</fo:inline> to create the set of functions and properties that
will become <fo:inline font-size="10pt" font-family="monospace">SwappingRouter</fo:inline>. The <fo:inline font-size="10pt" font-family="monospace">extend</fo:inline> function takes a destination, in
this case the empty prototype for <fo:inline font-size="10pt" font-family="monospace">SwappingRouter</fo:inline>, and copies in the
properties in the <fo:inline font-size="10pt" font-family="monospace">Backbone.Router</fo:inline> prototype along with our new custom object
that includes the <fo:inline font-size="10pt" font-family="monospace">swap</fo:inline> function.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Finally, the subclass cake is topped off with some Backbone frosting: setting
<fo:inline font-size="10pt" font-family="monospace">extend</fo:inline>, which is a self-propagating function that all Backbone public classes
use. Let’s take a quick look at this function, as of Backbone 0.5.3:</fo:block><fo:block id="id484183" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var extend = function (protoProps, classProps) {
  var child = inherits(this, protoProps, classProps);
  child.extend = this.extend;
  return child;
};

// Helper function to correctly set up the prototype chain, for subclasses.
// Similar to `goog.inherits`, but uses a hash of prototype properties and
// class properties to be extended.
var inherits = function(parent, protoProps, staticProps) {
  // sparing our readers the internals of this function... for a deep dive
  // into the dark realms of JavaScript's prototype system, read the source!
}</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">So, it’s a function that calls <fo:inline font-size="10pt" font-family="monospace">inherits</fo:inline> to make a new subclass.  The comments
reference <fo:inline font-size="10pt" font-family="monospace">goog.inherits</fo:inline> from Google’s Closure Library, which contains similar
utility functions to allow more class-style inheritance.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The end result here is that whenever you make a custom controller, internally
in Backbone, you’re making <fo:inline font-weight="bold">another</fo:inline> subclass. The inheritance chain for
<fo:inline font-size="10pt" font-family="monospace">TasksRouter</fo:inline> would then look like:</fo:block><fo:block id="id484228" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always"><fo:block font-weight="bold" font-size="14.4pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" keep-with-next.within-column="always">Figure 4. Router class inheritance</fo:block><fo:block id="id484234"><fo:external-graphic src="url(views_and_templates/router-diagram.png)" width="auto" height="auto" content-width="auto" content-height="auto"/></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Phew! Hopefully this adventure into Backbone and JavaScript internals has
taught you that although it’s more code, it’s hopefully going to save time down
the road for those maintaining your code.</fo:block></fo:block></fo:block><fo:block id="_composite_views"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Composite views</fo:marker><fo:block font-size="20.736pt">6.9. Composite views</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The <fo:inline font-size="10pt" font-family="monospace">SwappingRouter</fo:inline> above calls <fo:inline font-size="10pt" font-family="monospace">leave()</fo:inline> on the view it currently holds.
This function is not part of Backbone itself, and is part of our extension
library to help make views more modular and maintainable. This section goes
over the Composite View pattern, the <fo:inline font-size="10pt" font-family="monospace">CompositeView</fo:inline> class itself, and some
concerns to keep in mind while creating your views.</fo:block><fo:block id="_refactoring_from_a_large_view"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">6.9.1. Refactoring from a large view</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">One of the first refactorings you find yourself doing in a non-trivial Backbone
app is splitting up large views into composable parts. Let’s take another look
at the <fo:inline font-size="10pt" font-family="monospace">TaskDetail</fo:inline> source code from the beginning of this section:</fo:block><fo:block id="id484312" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var TaskDetail = Backbone.View.extend({
  template: JST['tasks/tasks_detail'],
  tagName: 'section',
  id: 'task',

  events: {
    "click .comments .form-inputs button": "createComment"
  },

  initialize: function() {
    _.bindAll(this, "render");

    this.model.bind("change", this.render);
    this.model.comments.bind("change", this.render);
    this.model.comments.bind("add", this.render);
  },

  render: function() {
    $(this.el).html(this.template({task: this.model}));
  },

  createComment: function() {
    var comment = new Comment({ text: this.$('.new-comment-input').val() });
    this.$('.new-comment-input').val('');
    this.model.comments.create(comment);
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The view class references a template, which renders out the HTML for this page:</fo:block><fo:block id="id484327" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;section class="task-details"&gt;
  &lt;input type="checkbox"&lt;%= task.isComplete() ? ' checked="checked"' : '' %&gt; /&gt;
  &lt;h2&gt;&lt;%= task.escape("title") %&gt;&lt;/h2&gt;
&lt;/section&gt;

&lt;section class="comments"&gt;
  &lt;ul&gt;
    &lt;% task.comments.each(function(comment) { %&gt;
      &lt;li&gt;
        &lt;h4&gt;&lt;%= comment.user.escape('name') %&gt;&lt;/h4&gt;
        &lt;p&gt;&lt;%= comment.escape('text') %&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;% } %&gt;
  &lt;/ul&gt;

  &lt;div class="form-inputs"&gt;
    &lt;label for="new-comment-input"&gt;Add comment&lt;/label&gt;
    &lt;textarea id="new-comment-input" cols="30" rows="10"&gt;&lt;/textarea&gt;
    &lt;button&gt;Add Comment&lt;/button&gt;
  &lt;/div&gt;
&lt;/section&gt;</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">There are clearly several concerns going on here: rendering the task, rendering
the comments that folks have left, and rendering the form to create new
comments. Let’s separate those concerns. A first approach might be to just
break up the template files:</fo:block><fo:block id="id484336" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;!-- tasks/show.jst --&gt;
&lt;section class="task-details"&gt;
  &lt;%= JST['tasks/details']({ task: task }) %&gt;
&lt;/section&gt;

&lt;section class="comments"&gt;
  &lt;%= JST['comments/list']({ task: task }) %&gt;
&lt;/section&gt;</fo:block><fo:block id="id484360" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;!-- tasks/details.jst --&gt;
&lt;input type="checkbox"&lt;%= task.isComplete() ? ' checked="checked"' : '' %&gt; /&gt;
&lt;h2&gt;&lt;%= task.escape("title") %&gt;&lt;/h2&gt;</fo:block><fo:block id="id484351" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;!-- comments/list.jst --&gt;
&lt;ul&gt;
  &lt;% task.comments.each(function(comment) { %&gt;
    &lt;%= JST['comments/item']({ comment: comment }) %&gt;
  &lt;% } %&gt;
&lt;/ul&gt;

&lt;%= JST['comments/new']() %&gt;</fo:block><fo:block id="id484381" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;!-- comments/item.jst --&gt;
&lt;h4&gt;&lt;%= comment.user.escape('name') %&gt;&lt;/h4&gt;
&lt;p&gt;&lt;%= comment.escape('text') %&gt;&lt;/p&gt;</fo:block><fo:block id="id484393" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;!-- comments/new.jst --&gt;
&lt;div class="form-inputs"&gt;
  &lt;label for="new-comment-input"&gt;Add comment&lt;/label&gt;
  &lt;textarea id="new-comment-input" cols="30" rows="10"&gt;&lt;/textarea&gt;
  &lt;button&gt;Add Comment&lt;/button&gt;
&lt;/div&gt;</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">But this is really only half the story. The <fo:inline font-size="10pt" font-family="monospace">TaskDetail</fo:inline> view class still
handles multiple concerns: displaying the task, and creating comments. Let’s
split that view class up, using the <fo:inline font-size="10pt" font-family="monospace">CompositeView</fo:inline> base class:</fo:block><fo:block id="id484426" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">CompositeView = function(options) {
  this.children = [];
  Backbone.View.apply(this, [options]);
};

_.extend(CompositeView.prototype, Backbone.View.prototype, {
  leave: function() {
    this._leaveChildren();
    this.unbind();
    this.remove();
    this._removeFromParent();
  },

  removeChild: function(view) {
    var index = this.children.indexOf(view);
    this.children.splice(index, 1);
  },

  renderChild: function(view) {
    view.render();
    this.children.push(view);
    view.parent = this;
  },

  appendChild: function(view) {
    this.renderChild(view);
    $(this.el).append(view.el);
  },

  renderChildInto: function(view, container) {
    this.renderChild(view);
    $(container).html('').append(view.el);
  },

  _leaveChildren: function() {
    var clonedChildren = this.children.slice(0);
    _.each(clonedChildren, function(view) {
      if (view.leave) {
        view.leave();
      }
    });
  },

  _removeFromParent: function() {
    if (this.parent) {
      this.parent.removeChild(this);
    }
  }
});

CompositeView.extend = Backbone.View.extend;</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">TODO: Re-link to swapping-internals anchor once <fo:basic-link external-destination="url(https://github.com/schacon/git-scribe/issues/33)">https://github.com/schacon/git-scribe/issues/33</fo:basic-link> is fixed</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Similar to the <fo:inline font-size="10pt" font-family="monospace">SwappingRouter</fo:inline>, the <fo:inline font-size="10pt" font-family="monospace">CompositeView</fo:inline> base class solves common
housekeeping problems by establishing a convention. See the Swapping Router and
Backbone internals section for an in-depth analysis of how this subclassing
pattern works.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Now our <fo:inline font-size="10pt" font-family="monospace">CompositeView</fo:inline> maintains an array of its immediate children as
<fo:inline font-size="10pt" font-family="monospace">this.children</fo:inline>.  With this reference in place, a parent view’s <fo:inline font-size="10pt" font-family="monospace">leave()</fo:inline> method
can invoke <fo:inline font-size="10pt" font-family="monospace">leave()</fo:inline> on its children, ensuring that an entire tree of composed
views is cleaned up properly.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">For child views that can dismiss themselves, such as dialog boxes, children
maintain a back-reference at <fo:inline font-size="10pt" font-family="monospace">this.parent</fo:inline>. This is used to reach up and call
<fo:inline font-size="10pt" font-family="monospace">this.parent.removeChild(this)</fo:inline> for these self-dismissing views.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Making use of <fo:inline font-size="10pt" font-family="monospace">CompositeView</fo:inline>, we split up the <fo:inline font-size="10pt" font-family="monospace">TaskDetail</fo:inline> view class:</fo:block><fo:block id="id484526" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var TaskDetail = Backbone.View.extend({
  tagName: 'section',
  id: 'task',

  initialize: function() {
    _.bindAll(this, "renderDetails");
    this.model.bind("change", this.renderDetails);
  },

  render: function() {
    this.renderLayout();
    this.renderDetail();
    this.renderCommentsList();
  },

  renderLayout: function() {
    $(this.el).html(JST['tasks/show']());
  },

  renderDetails: function() {
    var detailsMarkup = JST['tasks/details']({ task: this.model });
    this.$('.task-details').html(detailsMarkup);
  },

  renderCommentsList: function() {
    var commentsList = new CommentsList({ model: this.model });
    var commentsContainer = this.$('comments');
    this.renderChildInto(commentsList, commentsContainer);
  }
});</fo:block><fo:block id="id484538" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var CommentsList = CompositeView.extend({
  tagName: 'ul',

  initialize: function() {
    this.model.comments.bind("add", this.renderComments);
  },

  render: function() {
    this.renderLayout();
    this.renderComments();
    this.renderCommentForm();
  },

  renderLayout: function() {
    $(this.el).html(JST['comments/list']());
  },

  renderComments: function() {
    var commentsContainer = this.$('comments-list');
    commentsContainer.html('');

    this.model.comments.each(function(comment) {
      var commentMarkup = JST['comments/item']({ comment: comment });
      commentsContainer.append(commentMarkup);
    });
  },

  renderCommentForm: function() {
    var commentForm = new CommentForm({ model: this.model });
    var commentFormContainer = this.$('.new-comment-form');
    this.renderChildInto(commentForm, commentFormContainer);
  }
});</fo:block><fo:block id="id484547" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var CommentForm = CompositeView.extend({
  events: {
    "click button": "createComment"
  },

  initialize: function() {
    this.model = this.options.model;
  },

  render: function() {
    $(this.el).html(JST['comments/new']);
  },

  createComment: function() {
    var comment = new Comment({ text: $('.new-comment-input').val() });
    this.$('.new-comment-input').val('');
    this.model.comments.create(comment);
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Along with this, remove the <fo:inline font-size="10pt" font-family="monospace">&lt;%= JST(…) %&gt;</fo:inline> template nestings, allowing the
view classes to assemble the templates instead. In this case, each template
contains placeholder elements that are used to wrap child views:</fo:block><fo:block id="id484566" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;!-- tasks/show.jst --&gt;
&lt;section class="task-details"&gt;
&lt;/section&gt;

&lt;section class="comments"&gt;
&lt;/section&gt;</fo:block><fo:block id="id484577" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;!-- tasks/details.jst --&gt;
&lt;input type="checkbox"&lt;%= task.isComplete() ? ' checked="checked"' : '' %&gt; /&gt;
&lt;h2&gt;&lt;%= task.escape("title") %&gt;&lt;/h2&gt;</fo:block><fo:block id="id484588" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;!-- comments/list.jst --&gt;
&lt;ul class="comments-list"&gt;
&lt;/ul&gt;

&lt;section class="new-comment-form"&gt;
&lt;/section&gt;</fo:block><fo:block id="id484600" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;!-- comments/item.jst --&gt;
&lt;h4&gt;&lt;%= comment.user.escape('name') %&gt;&lt;/h4&gt;
&lt;p&gt;&lt;%= comment.escape('text') %&gt;&lt;/p&gt;</fo:block><fo:block id="id484612" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;!-- comments/new.jst --&gt;
&lt;label for="new-comment-input"&gt;Add comment&lt;/label&gt;
&lt;textarea class="new-comment-input" cols="30" rows="10"&gt;&lt;/textarea&gt;
&lt;button&gt;Add Comment&lt;/button&gt;</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">There are several advantages to this approach:</fo:block><fo:list-block id="id484633" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="id484635" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
Each view class has a smaller and more cohesive set of responsibilities.
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id484643" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
The comments view code, extracted and decoupled from the task view code, can
  now be reused on other domain objects with comments.
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="id484654" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
The task view performs better, since adding new comments or updating the task
  details will only re-render the pertinent section, instead of re-rendering the
  entire task + comments composite.
</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block id="_cleaning_up_views_properly"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">6.9.2. Cleaning up views properly</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">We now have a full set of tools to clean up views properly.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">TODO: Wrap up and re-state the "cleaning up, swappingrouter, compositeview" sections.  Mix <fo:inline font-size="10pt" font-family="monospace">Observer</fo:inline> into <fo:inline font-size="10pt" font-family="monospace">CompositeView</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="_how_to_use_multiple_views_on_the_same_model_collection_chapter_unstarted"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">How to use multiple views on the same model/collection (chapter unstarted)</fo:marker><fo:block font-size="20.736pt">6.10. How to use multiple views on the same model/collection (chapter unstarted)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_internationalization_chapter_unstarted"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Internationalization (chapter unstarted)</fo:marker><fo:block font-size="20.736pt">6.11. Internationalization (chapter unstarted)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_models_and_collections"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Models and collections</fo:marker><fo:block font-size="24.8832pt">7. Models and collections</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_naming_conventions_chapter_unstarted"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Naming conventions (chapter unstarted)</fo:marker><fo:block font-size="20.736pt">7.1. Naming conventions (chapter unstarted)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_nested_resources_chapter_unstarted"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Nested resources (chapter unstarted)</fo:marker><fo:block font-size="20.736pt">7.2. Nested resources (chapter unstarted)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_model_associations"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Model associations</fo:marker><fo:block font-size="20.736pt">7.3. Model associations</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Backbone.js doesn’t prescribe a way to define associations between models, so
we need to get creative and use the power of JavaScript to set up associations
in such a way that its usage is natural.</fo:block><fo:block id="_belongs_to_associations"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">7.3.1. Belongs to associations</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Setting up a <fo:inline font-size="10pt" font-family="monospace">belongs_to</fo:inline> association in Backbone is a two step process. Let’s
discuss setting up the association that may occur between a task and a user.
The end result of the approach is a <fo:inline font-size="10pt" font-family="monospace">Task</fo:inline> instance having a property called
<fo:inline font-size="10pt" font-family="monospace">user</fo:inline> where we store the associated <fo:inline font-size="10pt" font-family="monospace">User</fo:inline> object.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To set this up, let’s start by telling Rails to augment the task’s JSON
representation to also send over the associated user attributes:</fo:block><fo:block id="id484807" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">class Task &lt; ActiveRecord::Base
  belongs_to :user

  def as_json(options = {})
    super(include: { user: { only: [:name, :email] } })
  end
end</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">This means that when Backbone calls <fo:inline font-size="10pt" font-family="monospace">fetch()</fo:inline> for a <fo:inline font-size="10pt" font-family="monospace">Task</fo:inline> model, it will
include the name and email of the associated user nested within the task JSON
representation. Something like this:</fo:block><fo:block id="id484839" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">{
  "title": "Buy more Cheeseburgers",
  "due_date": "2011-03-04",
  "user": {
    "name": "Robert McGraffalon",
    "email": "bobby@themcgraffalons.com"
  }
}</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Now that we receive user data with the task’s JSON representation, let’s tell
our Backbone User model to store the User object. We do that on the task’s
initializer. Here’s a first cut at that:</fo:block><fo:block id="id484863" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var Task = Backbone.Model.extend({
  initialize: function() {
    this.user = new User(this.get('user'));
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">We can make a couple of improvements to the above. First, you’ll soon realize
that you might be setting the user outside of the initialize as well. Second,
the initializer should check whether there is user data in the first place. To
address the first concern, let’s create a setter for the object. Backbone
provides a handy function called <fo:inline font-size="10pt" font-family="monospace">has</fo:inline> that returns true or false depending on
whether the provided option is set for the object:</fo:block><fo:block id="id484877" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var Task = Backbone.Model.extend({
  initialize: function() {
    if (this.has('user')) {
      this.setUser(new User(this.get('user')));
    }
  },

  setUser: function(user) {
    this.user = user;
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The final setup allows for a nice clean interface to a task’s user, by
accessing the task property of the user instance.</fo:block><fo:block id="id484911" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var task = Task.fetch(1);
console.log(task.get('title') + ' is being worked on by ' + task.user.get('name'));</fo:block></fo:block><fo:block id="_has_many_associations"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">7.3.2. Has many associations</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">You can take a similar approach to set up a <fo:inline font-size="10pt" font-family="monospace">has_many</fo:inline> association on the
client side models. This time, however, the object’s property will be a
Backbone collection.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Following the example, say we need access to a user’s tasks. Let’s set up the
JSON representation on the Rails side first:</fo:block><fo:block id="id484953" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">class User &lt; ActiveRecord::Base
  has_many :tasks

  def as_json(options = {})
    super(include: { tasks: { only: [:body, :due_date] } })
  end
end</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Now, on the Backbone <fo:inline font-size="10pt" font-family="monospace">User</fo:inline> model’s initializer, let’s call the <fo:inline font-size="10pt" font-family="monospace">setTasks</fo:inline>
function:</fo:block><fo:block id="id484982" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var User = Backbone.Model.extend({
  initialize: function() {
    var tasks = new Tasks.reset(this.get('tasks'));
    this.setTasks(tasks);
  },

  setTasks: function(tasks) {
    this.tasks = tasks;
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Note that we are setting the relation to an instance of the <fo:inline font-size="10pt" font-family="monospace">Tasks</fo:inline> collection.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">TODO: Let’s exapnd upon this, as it isn’t the most flexible solution.  (It is
a good start.) We are setting the JSON representation of the Rails models to
suit the Backbone.js concerns.  Additionally, the <fo:inline font-size="10pt" font-family="monospace">Task#as_json</fo:inline> method at the
top is concerned with the User JSON representation.  It should at least delegate
to User#as_json. Going further, the JSON presentation for consumption by
Backbone.js should be completely extracted into the JSON API endpoint controller
action, or even a separate presenter class.</fo:block></fo:block></fo:block><fo:block id="_filters_and_sorting"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Filters and sorting</fo:marker><fo:block font-size="20.736pt">7.4. Filters and sorting</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">When using our Backbone models and collections, it’s often handy to filter the
collections by resuable criteria, or sort them by several different criteria.</fo:block><fo:block id="_filters"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">7.4.1. Filters</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To filter a <fo:inline font-size="10pt" font-family="monospace">Backbone.Collection</fo:inline>, like with Rails named scopes, define
functions on your collections that filter by your criteria, using the <fo:inline font-size="10pt" font-family="monospace">select</fo:inline>
function from Underscore.js, and return new instances of the collection class. A
first implementation might look like this:</fo:block><fo:block id="id485069" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var Tasks = Backbone.Collection.extend({
  model: Task,
  url: '/tasks',

  complete: function() {
    var filteredTasks = this.select(function(task) {
      return task.get('completed_at') !== null;
    });
    return new Tasks(filteredTasks);
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Let’s refactor this a bit.  Ideally, the filter functions will reuse logic
already defined in your model class:</fo:block><fo:block id="id485078" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var Task = Backbone.Model.extend({
  isComplete: function() {
    return this.get('completed_at') !== null;
  }
});

var Tasks = Backbone.Collection.extend({
  model: Task,
  url: '/tasks',

  complete: function() {
    var filteredTasks = this.select(function(task) {
      return task.isComplete();
    });
    return new Tasks(filteredTasks);
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Going further, notice that there are actually two concerns in this function.
The first is the notion of filtering the collection, and the other is the
specific filtering criteria (<fo:inline font-size="10pt" font-family="monospace">task.isComplete()</fo:inline>).</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Let’s separate the two concerns here, and extract a <fo:inline font-size="10pt" font-family="monospace">filtered</fo:inline> function:</fo:block><fo:block id="id485116" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var Task = Backbone.Model.extend({
  isComplete: function() {
    return this.get('completed_at') !== null;
  }
});

var Tasks = Backbone.Collection.extend({
  model: Task,
  url: '/tasks',

  complete: function() {
    return this.filtered(function(task) {
      return task.isComplete();
    });
  },

  filtered: function(criteriaFunction) {
    return new Tasks(this.select(criteriaFunction));
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">We can extract this function into a reusable mixin, abstracting the <fo:inline font-size="10pt" font-family="monospace">Tasks</fo:inline>
collection class using <fo:inline font-size="10pt" font-family="monospace">this.constructor</fo:inline>:</fo:block><fo:block id="id485142" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">FilterableCollectionMixin = {
  filtered: function(criteriaFunction) {
    return new this.constructor(this.select(criteriaFunction));
  }
};

var Task = Backbone.Model.extend({
  isComplete: function() {
    return this.get('completed_at') !== null;
  }
});

var Tasks = Backbone.Collection.extend(_.extend({
  model: Task,
  url: '/tasks',

  complete: function() {
    return this.filtered(function(task) {
      return task.isComplete();
    });
  }
}, FilterableCollectionMixin));</fo:block></fo:block><fo:block id="_sorting"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="17.28pt">7.4.2. Sorting</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The simplest way to sort a <fo:inline font-size="10pt" font-family="monospace">Backbone.Collection</fo:inline> is to define a <fo:inline font-size="10pt" font-family="monospace">comparator</fo:inline>
function.  This functionality is built in:</fo:block><fo:block id="id485171" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var Tasks = Backbone.Collection.extend({
  model: Task,
  url: '/tasks',

  comparator: function(task) {
    return task.dueDate;
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If you’d like to provide more than one sort order on your collection, you can
use an approach similar to the <fo:inline font-size="10pt" font-family="monospace">filtered</fo:inline> function above, and return a new
<fo:inline font-size="10pt" font-family="monospace">Backbone.Collection</fo:inline> whose <fo:inline font-size="10pt" font-family="monospace">comparator</fo:inline> is overridden.  Call <fo:inline font-size="10pt" font-family="monospace">sort</fo:inline> to update
the ordering on the new collection:</fo:block><fo:block id="id485216" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var Tasks = Backbone.Collection.extend({
  model: Task,
  url: '/tasks',

  comparator: function(task) {
    return task.dueDate;
  },

  byCreatedAt: function() {
    var sortedCollection = new Tasks(this.models);
    sortedCollection.comparator = function(task) {
      return task.createdAt;
    };
    sortedCollection.sort();
    return sortedCollection;
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Similarly, you can extract the reusable concern to another function:</fo:block><fo:block id="id485232" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var Tasks = Backbone.Collection.extend({
  model: Task,
  url: '/tasks',

  comparator: function(task) {
    return task.dueDate;
  },

  byCreatedAt: function() {
    return this.sortedBy(function(task) {
      return task.createdAt;
    });
  },

  byCompletedAt: function() {
    return this.sortedBy(function(task) {
      return task.completedAt;
    });
  },

  sortedBy: function(comparator) {
    var sortedCollection = new Tasks(this.models);
    sortedCollection.comparator = comparator;
    sortedCollection.sort();
    return sortedCollection;
  }
});</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">And then into another reusable mixin:</fo:block><fo:block id="id485244" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">var SortableCollectionMixin = {
  sortedBy: function(comparator) {
    var sortedCollection = new this.constructor(this.models);
    sortedCollection.comparator = comparator;
    sortedCollection.sort();
    return sortedCollection;
  }
};

var Tasks = Backbone.Collection.extend(_.extend({
  model: Task,
  url: '/tasks',

  comparator: function(task) {
    return task.dueDate;
  },

  byCreatedAt: function() {
    return this.sortedBy(function(task) {
      return task.createdAt;
    });
  },

  byCompletedAt: function() {
    return this.sortedBy(function(task) {
      return task.completedAt;
    });
  }
}, SortableCollectionMixin));</fo:block></fo:block></fo:block><fo:block id="_client_server_duplicated_business_logic_chapter_unstarted"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Client/Server duplicated business logic (chapter unstarted)</fo:marker><fo:block font-size="20.736pt">7.5. Client/Server duplicated business logic (chapter unstarted)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_validations_chapter_unstarted"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Validations (chapter unstarted)</fo:marker><fo:block font-size="20.736pt">7.6. Validations (chapter unstarted)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_synchronizing_between_clients_chapter_unstarted"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Synchronizing between clients (chapter unstarted)</fo:marker><fo:block font-size="20.736pt">7.7. Synchronizing between clients (chapter unstarted)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_testing_section_unstarted"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Testing (section unstarted)</fo:marker><fo:block font-size="24.8832pt">8. Testing (section unstarted)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_full_stack_integration_testing"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Full-stack integration testing</fo:marker><fo:block font-size="20.736pt">8.1. Full-stack integration testing</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_isolated_unit_testing"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Isolated unit testing</fo:marker><fo:block font-size="20.736pt">8.2. Isolated unit testing</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_the_javascript_language_section_unstarted"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">The JavaScript language (section unstarted)</fo:marker><fo:block font-size="24.8832pt">9. The JavaScript language (section unstarted)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_model_attribute_types_and_serialization"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Model attribute types and serialization</fo:marker><fo:block font-size="20.736pt">9.1. Model attribute types and serialization</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_context_binding_js_literal_this_literal"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Context binding (JS <fo:inline font-size="10pt" font-family="monospace">this</fo:inline>)</fo:marker><fo:block font-size="20.736pt">9.2. Context binding (JS <fo:inline font-size="10pt" font-family="monospace">this</fo:inline>)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_coffeescript_with_backbone_js"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">CoffeeScript with Backbone.js</fo:marker><fo:block font-size="20.736pt">9.3. CoffeeScript with Backbone.js</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_security_stub"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Security (stub)</fo:marker><fo:block font-size="24.8832pt">10. Security (stub)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_xss_with_json_bootstrapping_stub"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">XSS with JSON bootstrapping (stub)</fo:marker><fo:block font-size="20.736pt">10.1. XSS with JSON bootstrapping (stub)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Use <fo:inline font-size="10pt" font-family="monospace">json2.js</fo:inline> and:</fo:block><fo:block id="id485380" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">&lt;script type="text/json" id="something"&gt;
  &lt;%= something.to_json %&gt;
&lt;/script&gt;

&lt;script type="text/javascript"&gt;
  (function () {
    var something = JSON.parse($('#something').text());
    someJavascriptFunction(something);
  })();
&lt;/script&gt;</fo:block></fo:block><fo:block id="_xss_in_html_templates_stub"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">XSS in HTML templates (stub)</fo:marker><fo:block font-size="20.736pt">10.2. XSS in HTML templates (stub)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">TODO: Discuss <fo:inline font-size="10pt" font-family="monospace">Backbone.Model.escape</fo:inline>, <fo:inline font-size="10pt" font-family="monospace">_.escape</fo:inline>, defaulting to escape with <fo:inline font-size="10pt" font-family="monospace">&lt;%=</fo:inline> vs <fo:inline font-size="10pt" font-family="monospace">&lt;%==</fo:inline>, escaping in other templating.</fo:block></fo:block></fo:block><fo:block id="_performance_stub"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Performance (stub)</fo:marker><fo:block font-size="24.8832pt">11. Performance (stub)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="_dependency_choice"><fo:block><fo:block><fo:block margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Dependency choice</fo:marker><fo:block font-size="20.736pt">11.1. Dependency choice</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Backbone.js defines a <fo:inline font-size="10pt" font-family="monospace">$</fo:inline> variable that defers to jQuery if present.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If you are only targeting mobile platforms, Backbone will handily fall back to
Zepto <fo:basic-link external-destination="url(http://zeptojs.com)">http://zeptojs.com</fo:basic-link> for a more lightweight dependency.  Zepto is "a
minimalist JavaScript framework for mobile WebKit browsers, with a
jQuery-compatible syntax."  From <fo:inline font-size="10pt" font-family="monospace">backbone.js</fo:inline>:</fo:block><fo:block id="id485474" text-align="start" wrap-option="no-wrap" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-size="10pt" font-family="monospace" background-color="#E0E0E0" border="0">(function(){

  // Initial Setup
  // -------------

  // Save a reference to the global object.
  var root = this;

  // For Backbone's purposes, jQuery or Zepto owns the `$` variable.
  var $ = root.jQuery || root.Zepto;

  // ...

}).call(this);</fo:block></fo:block></fo:block></fo:flow></fo:page-sequence></fo:root>
